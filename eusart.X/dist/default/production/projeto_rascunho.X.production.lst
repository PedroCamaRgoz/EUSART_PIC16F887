

Microchip Technology PIC LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Tue Sep 28 16:46:36 2021

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1  0000                     
      + 0000                     
     2                           ; Version 2.00
     3                           ; Generated 27/05/2018 GMT
     4                           
     5                           ; 
     6                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
     7                           ; All rights reserved.
     8                           ; 
     9                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
                                 ip").
    10                           ; 
    11                           ; Redistribution and use in source and binary forms, with or without modification, are
    12                           ; permitted provided that the following conditions are met:
    13                           ; 
    14                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
                                 t of
    15                           ;        conditions and the following disclaimer.
    16                           ; 
    17                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
                                 list
    18                           ;        of conditions and the following disclaimer in the documentation and/or other
    19                           ;        materials provided with the distribution.
    20                           ; 
    21                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
                                 is
    22                           ;        software without specific prior written permission.
    23                           ; 
    24                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,

    25                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
                                 OR
    26                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
                                 T,
    27                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
                                 
    28                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
                                 
    29                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
                                 RICT
    30                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
                                 SE OF
    31                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    32                           ; 
    33                           
    34                           
    35                           ; 
    36                           ; Code-generator required, PIC16F887 Definitions
    37                           ; 
    38  0004                     fsr0 equ 04h
    39  0004                     indf equ 00h
    40  0000                     indf0 equ 00h
    41  0000                     pc equ 02h
    42  0002                     pcl equ 02h
    43  0002                     pclath equ 0Ah
    44  000A                     status equ 03h
    45  0003                     
     2                           opt pagewidth 120
     3  0000                     byte0	macro	val
     4                           	(getbyte(val,0))
     5                           endm
     6  0000                     byte1	macro	val
     7                           	(getbyte(val,1))
     8                           endm
     9  0000                     byte2	macro	val
    10                           	(getbyte(val,2))
    11                           endm
    12  0000                     byte3	macro	val
    13                           	(getbyte(val,3))
    14                           endm
    15  0000                     byte4	macro	val
    16                           	(getbyte(val,4))
    17                           endm
    18  0000                     byte5	macro	val
    19                           	(getbyte(val,5))
    20                           endm
    21  0000                     byte6	macro	val
    22                           	(getbyte(val,6))
    23                           endm
    24  0000                     byte7	macro	val
    25                           	(getbyte(val,7))
    26                           endm
    27  0000                     getword	macro	val,pos
    28                           	(((val) >> (8 * pos)) and 0xffff)
    29                           endm
    30  0000                     word0	macro	val
    31                           	(getword(val,0))
    32                           endm
    33  0000                     word1	macro	val
    34                           	(getword(val,2))
    35                           endm
    36  0000                     word2	macro	val
    37                           	(getword(val,4))
    38                           endm
    39  0000                     word3	macro	val
    40                           	(getword(val,6))
    41                           endm
    42  0000                     gettword	macro	val,pos
    43                           	(((val) >> (8 * pos)) and 0xffffff)
    44                           endm
    45  0000                     tword0	macro	val
    46                           	(gettword(val,0))
    47                           endm
    48  0000                     tword1	macro	val
    49                           	(gettword(val,3))
    50                           endm
    51  0000                     tword2	macro	val
    52                           	(gettword(val,6))
    53                           endm
    54  0000                     getdword	macro	val,pos
    55                           	(((val) >> (8 * pos)) and 0xffffffff)
    56                           endm
    57  0000                     dword0	macro	val
    58                           	(getdword(val,0))
    59                           endm
    60  0000                     dword1	macro	val
    61                           	(getdword(val,4))
    62                           endm
    63  0000                     clrc	macro
    64                           	bcf	3,0
    65                           	endm
    66  0000                     clrz	macro
    67                           	bcf	3,2
    68                           	endm
    69  0000                     setc	macro
    70                           	bsf	3,0
    71                           	endm
    72  0000                     setz	macro
    73                           	bsf	3,2
    74                           	endm
    75  0000                     skipc	macro
    76                           	btfss	3,0
    77                           	endm
    78  0000                     skipz	macro
    79                           	btfss	3,2
    80                           	endm
    81  0000                     skipnc	macro
    82                           	btfsc	3,0
    83                           	endm
    84  0000                     skipnz	macro
    85                           	btfsc	3,2
    86                           	endm
    87  0000                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    88                           INDF equ 00h ;# 
    89  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    90                           TMR0 equ 01h ;# 
    91  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    92                           PCL equ 02h ;# 
    93  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    94                           STATUS equ 03h ;# 
    95  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    96                           FSR equ 04h ;# 
    97  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    98                           PORTA equ 05h ;# 
    99  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   100                           PORTB equ 06h ;# 
   101  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   102                           PORTC equ 07h ;# 
   103  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   104                           PORTD equ 08h ;# 
   105  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   106                           PORTE equ 09h ;# 
   107  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   108                           PCLATH equ 0Ah ;# 
   109  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   110                           INTCON equ 0Bh ;# 
   111  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   112                           PIR1 equ 0Ch ;# 
   113  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   114                           PIR2 equ 0Dh ;# 
   115  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   116                           TMR1 equ 0Eh ;# 
   117  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   118                           TMR1L equ 0Eh ;# 
   119  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   120                           TMR1H equ 0Fh ;# 
   121  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   122                           T1CON equ 010h ;# 
   123  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   124                           TMR2 equ 011h ;# 
   125  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   126                           T2CON equ 012h ;# 
   127  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   128                           SSPBUF equ 013h ;# 
   129  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   130                           SSPCON equ 014h ;# 
   131  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   132                           CCPR1 equ 015h ;# 
   133  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   134                           CCPR1L equ 015h ;# 
   135  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   136                           CCPR1H equ 016h ;# 
   137  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   138                           CCP1CON equ 017h ;# 
   139  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   140                           RCSTA equ 018h ;# 
   141  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   142                           TXREG equ 019h ;# 
   143  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   144                           RCREG equ 01Ah ;# 
   145  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   146                           CCPR2 equ 01Bh ;# 
   147  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   148                           CCPR2L equ 01Bh ;# 
   149  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   150                           CCPR2H equ 01Ch ;# 
   151  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   152                           CCP2CON equ 01Dh ;# 
   153  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   154                           ADRESH equ 01Eh ;# 
   155  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   156                           ADCON0 equ 01Fh ;# 
   157  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   158                           OPTION_REG equ 081h ;# 
   159  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   160                           TRISA equ 085h ;# 
   161  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   162                           TRISB equ 086h ;# 
   163  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   164                           TRISC equ 087h ;# 
   165  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   166                           TRISD equ 088h ;# 
   167  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   168                           TRISE equ 089h ;# 
   169  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   170                           PIE1 equ 08Ch ;# 
   171  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   172                           PIE2 equ 08Dh ;# 
   173  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   174                           PCON equ 08Eh ;# 
   175  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   176                           OSCCON equ 08Fh ;# 
   177  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   178                           OSCTUNE equ 090h ;# 
   179  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   180                           SSPCON2 equ 091h ;# 
   181  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   182                           PR2 equ 092h ;# 
   183  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   184                           SSPADD equ 093h ;# 
   185  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   186                           SSPMSK equ 093h ;# 
   187  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   188                           MSK equ 093h ;# 
   189  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   190                           SSPSTAT equ 094h ;# 
   191  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   192                           WPUB equ 095h ;# 
   193  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   194                           IOCB equ 096h ;# 
   195  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   196                           VRCON equ 097h ;# 
   197  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   198                           TXSTA equ 098h ;# 
   199  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   200                           SPBRG equ 099h ;# 
   201  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   202                           SPBRGH equ 09Ah ;# 
   203  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   204                           PWM1CON equ 09Bh ;# 
   205  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   206                           ECCPAS equ 09Ch ;# 
   207  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   208                           PSTRCON equ 09Dh ;# 
   209  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   210                           ADRESL equ 09Eh ;# 
   211  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   212                           ADCON1 equ 09Fh ;# 
   213  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   214                           WDTCON equ 0105h ;# 
   215  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   216                           CM1CON0 equ 0107h ;# 
   217  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   218                           CM2CON0 equ 0108h ;# 
   219  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   220                           CM2CON1 equ 0109h ;# 
   221  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   222                           EEDATA equ 010Ch ;# 
   223  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   224                           EEDAT equ 010Ch ;# 
   225  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   226                           EEADR equ 010Dh ;# 
   227  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   228                           EEDATH equ 010Eh ;# 
   229  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   230                           EEADRH equ 010Fh ;# 
   231  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   232                           SRCON equ 0185h ;# 
   233  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   234                           BAUDCTL equ 0187h ;# 
   235  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   236                           ANSEL equ 0188h ;# 
   237  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   238                           ANSELH equ 0189h ;# 
   239  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   240                           EECON1 equ 018Ch ;# 
   241  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   242                           EECON2 equ 018Dh ;# 
   243  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   244                           INDF equ 00h ;# 
   245  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   246                           TMR0 equ 01h ;# 
   247  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   248                           PCL equ 02h ;# 
   249  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   250                           STATUS equ 03h ;# 
   251  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   252                           FSR equ 04h ;# 
   253  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   254                           PORTA equ 05h ;# 
   255  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   256                           PORTB equ 06h ;# 
   257  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   258                           PORTC equ 07h ;# 
   259  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   260                           PORTD equ 08h ;# 
   261  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   262                           PORTE equ 09h ;# 
   263  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   264                           PCLATH equ 0Ah ;# 
   265  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   266                           INTCON equ 0Bh ;# 
   267  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   268                           PIR1 equ 0Ch ;# 
   269  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   270                           PIR2 equ 0Dh ;# 
   271  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   272                           TMR1 equ 0Eh ;# 
   273  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   274                           TMR1L equ 0Eh ;# 
   275  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   276                           TMR1H equ 0Fh ;# 
   277  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   278                           T1CON equ 010h ;# 
   279  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   280                           TMR2 equ 011h ;# 
   281  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   282                           T2CON equ 012h ;# 
   283  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   284                           SSPBUF equ 013h ;# 
   285  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   286                           SSPCON equ 014h ;# 
   287  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   288                           CCPR1 equ 015h ;# 
   289  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   290                           CCPR1L equ 015h ;# 
   291  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   292                           CCPR1H equ 016h ;# 
   293  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   294                           CCP1CON equ 017h ;# 
   295  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   296                           RCSTA equ 018h ;# 
   297  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   298                           TXREG equ 019h ;# 
   299  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   300                           RCREG equ 01Ah ;# 
   301  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   302                           CCPR2 equ 01Bh ;# 
   303  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   304                           CCPR2L equ 01Bh ;# 
   305  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   306                           CCPR2H equ 01Ch ;# 
   307  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   308                           CCP2CON equ 01Dh ;# 
   309  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   310                           ADRESH equ 01Eh ;# 
   311  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   312                           ADCON0 equ 01Fh ;# 
   313  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   314                           OPTION_REG equ 081h ;# 
   315  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   316                           TRISA equ 085h ;# 
   317  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   318                           TRISB equ 086h ;# 
   319  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   320                           TRISC equ 087h ;# 
   321  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   322                           TRISD equ 088h ;# 
   323  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   324                           TRISE equ 089h ;# 
   325  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   326                           PIE1 equ 08Ch ;# 
   327  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   328                           PIE2 equ 08Dh ;# 
   329  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   330                           PCON equ 08Eh ;# 
   331  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   332                           OSCCON equ 08Fh ;# 
   333  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   334                           OSCTUNE equ 090h ;# 
   335  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   336                           SSPCON2 equ 091h ;# 
   337  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   338                           PR2 equ 092h ;# 
   339  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   340                           SSPADD equ 093h ;# 
   341  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   342                           SSPMSK equ 093h ;# 
   343  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   344                           MSK equ 093h ;# 
   345  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   346                           SSPSTAT equ 094h ;# 
   347  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   348                           WPUB equ 095h ;# 
   349  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   350                           IOCB equ 096h ;# 
   351  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   352                           VRCON equ 097h ;# 
   353  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   354                           TXSTA equ 098h ;# 
   355  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   356                           SPBRG equ 099h ;# 
   357  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   358                           SPBRGH equ 09Ah ;# 
   359  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   360                           PWM1CON equ 09Bh ;# 
   361  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   362                           ECCPAS equ 09Ch ;# 
   363  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   364                           PSTRCON equ 09Dh ;# 
   365  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   366                           ADRESL equ 09Eh ;# 
   367  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   368                           ADCON1 equ 09Fh ;# 
   369  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   370                           WDTCON equ 0105h ;# 
   371  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   372                           CM1CON0 equ 0107h ;# 
   373  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   374                           CM2CON0 equ 0108h ;# 
   375  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   376                           CM2CON1 equ 0109h ;# 
   377  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   378                           EEDATA equ 010Ch ;# 
   379  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   380                           EEDAT equ 010Ch ;# 
   381  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   382                           EEADR equ 010Dh ;# 
   383  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   384                           EEDATH equ 010Eh ;# 
   385  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   386                           EEADRH equ 010Fh ;# 
   387  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   388                           SRCON equ 0185h ;# 
   389  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   390                           BAUDCTL equ 0187h ;# 
   391  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   392                           ANSEL equ 0188h ;# 
   393  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   394                           ANSELH equ 0189h ;# 
   395  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   396                           EECON1 equ 018Ch ;# 
   397  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   398                           EECON2 equ 018Dh ;# 
   399  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   400                           INDF equ 00h ;# 
   401  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   402                           TMR0 equ 01h ;# 
   403  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   404                           PCL equ 02h ;# 
   405  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   406                           STATUS equ 03h ;# 
   407  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   408                           FSR equ 04h ;# 
   409  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   410                           PORTA equ 05h ;# 
   411  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   412                           PORTB equ 06h ;# 
   413  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   414                           PORTC equ 07h ;# 
   415  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   416                           PORTD equ 08h ;# 
   417  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   418                           PORTE equ 09h ;# 
   419  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   420                           PCLATH equ 0Ah ;# 
   421  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   422                           INTCON equ 0Bh ;# 
   423  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   424                           PIR1 equ 0Ch ;# 
   425  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   426                           PIR2 equ 0Dh ;# 
   427  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   428                           TMR1 equ 0Eh ;# 
   429  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   430                           TMR1L equ 0Eh ;# 
   431  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   432                           TMR1H equ 0Fh ;# 
   433  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   434                           T1CON equ 010h ;# 
   435  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   436                           TMR2 equ 011h ;# 
   437  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   438                           T2CON equ 012h ;# 
   439  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   440                           SSPBUF equ 013h ;# 
   441  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   442                           SSPCON equ 014h ;# 
   443  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   444                           CCPR1 equ 015h ;# 
   445  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   446                           CCPR1L equ 015h ;# 
   447  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   448                           CCPR1H equ 016h ;# 
   449  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   450                           CCP1CON equ 017h ;# 
   451  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   452                           RCSTA equ 018h ;# 
   453  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   454                           TXREG equ 019h ;# 
   455  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   456                           RCREG equ 01Ah ;# 
   457  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   458                           CCPR2 equ 01Bh ;# 
   459  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   460                           CCPR2L equ 01Bh ;# 
   461  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   462                           CCPR2H equ 01Ch ;# 
   463  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   464                           CCP2CON equ 01Dh ;# 
   465  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   466                           ADRESH equ 01Eh ;# 
   467  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   468                           ADCON0 equ 01Fh ;# 
   469  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   470                           OPTION_REG equ 081h ;# 
   471  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   472                           TRISA equ 085h ;# 
   473  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   474                           TRISB equ 086h ;# 
   475  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   476                           TRISC equ 087h ;# 
   477  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   478                           TRISD equ 088h ;# 
   479  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   480                           TRISE equ 089h ;# 
   481  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   482                           PIE1 equ 08Ch ;# 
   483  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   484                           PIE2 equ 08Dh ;# 
   485  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   486                           PCON equ 08Eh ;# 
   487  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   488                           OSCCON equ 08Fh ;# 
   489  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   490                           OSCTUNE equ 090h ;# 
   491  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   492                           SSPCON2 equ 091h ;# 
   493  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   494                           PR2 equ 092h ;# 
   495  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   496                           SSPADD equ 093h ;# 
   497  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   498                           SSPMSK equ 093h ;# 
   499  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   500                           MSK equ 093h ;# 
   501  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   502                           SSPSTAT equ 094h ;# 
   503  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   504                           WPUB equ 095h ;# 
   505  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   506                           IOCB equ 096h ;# 
   507  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   508                           VRCON equ 097h ;# 
   509  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   510                           TXSTA equ 098h ;# 
   511  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   512                           SPBRG equ 099h ;# 
   513  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   514                           SPBRGH equ 09Ah ;# 
   515  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   516                           PWM1CON equ 09Bh ;# 
   517  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   518                           ECCPAS equ 09Ch ;# 
   519  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   520                           PSTRCON equ 09Dh ;# 
   521  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   522                           ADRESL equ 09Eh ;# 
   523  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   524                           ADCON1 equ 09Fh ;# 
   525  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   526                           WDTCON equ 0105h ;# 
   527  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   528                           CM1CON0 equ 0107h ;# 
   529  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   530                           CM2CON0 equ 0108h ;# 
   531  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   532                           CM2CON1 equ 0109h ;# 
   533  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   534                           EEDATA equ 010Ch ;# 
   535  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   536                           EEDAT equ 010Ch ;# 
   537  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   538                           EEADR equ 010Dh ;# 
   539  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   540                           EEDATH equ 010Eh ;# 
   541  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   542                           EEADRH equ 010Fh ;# 
   543  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   544                           SRCON equ 0185h ;# 
   545  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   546                           BAUDCTL equ 0187h ;# 
   547  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   548                           ANSEL equ 0188h ;# 
   549  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   550                           ANSELH equ 0189h ;# 
   551  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   552                           EECON1 equ 018Ch ;# 
   553  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   554                           EECON2 equ 018Dh ;# 
   555  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   556                           INDF equ 00h ;# 
   557  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   558                           TMR0 equ 01h ;# 
   559  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   560                           PCL equ 02h ;# 
   561  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   562                           STATUS equ 03h ;# 
   563  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   564                           FSR equ 04h ;# 
   565  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   566                           PORTA equ 05h ;# 
   567  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   568                           PORTB equ 06h ;# 
   569  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   570                           PORTC equ 07h ;# 
   571  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   572                           PORTD equ 08h ;# 
   573  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   574                           PORTE equ 09h ;# 
   575  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   576                           PCLATH equ 0Ah ;# 
   577  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   578                           INTCON equ 0Bh ;# 
   579  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   580                           PIR1 equ 0Ch ;# 
   581  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   582                           PIR2 equ 0Dh ;# 
   583  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   584                           TMR1 equ 0Eh ;# 
   585  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   586                           TMR1L equ 0Eh ;# 
   587  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   588                           TMR1H equ 0Fh ;# 
   589  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   590                           T1CON equ 010h ;# 
   591  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   592                           TMR2 equ 011h ;# 
   593  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   594                           T2CON equ 012h ;# 
   595  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   596                           SSPBUF equ 013h ;# 
   597  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   598                           SSPCON equ 014h ;# 
   599  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   600                           CCPR1 equ 015h ;# 
   601  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   602                           CCPR1L equ 015h ;# 
   603  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   604                           CCPR1H equ 016h ;# 
   605  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   606                           CCP1CON equ 017h ;# 
   607  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   608                           RCSTA equ 018h ;# 
   609  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   610                           TXREG equ 019h ;# 
   611  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   612                           RCREG equ 01Ah ;# 
   613  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   614                           CCPR2 equ 01Bh ;# 
   615  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   616                           CCPR2L equ 01Bh ;# 
   617  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   618                           CCPR2H equ 01Ch ;# 
   619  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   620                           CCP2CON equ 01Dh ;# 
   621  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   622                           ADRESH equ 01Eh ;# 
   623  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   624                           ADCON0 equ 01Fh ;# 
   625  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   626                           OPTION_REG equ 081h ;# 
   627  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   628                           TRISA equ 085h ;# 
   629  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   630                           TRISB equ 086h ;# 
   631  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   632                           TRISC equ 087h ;# 
   633  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   634                           TRISD equ 088h ;# 
   635  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   636                           TRISE equ 089h ;# 
   637  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   638                           PIE1 equ 08Ch ;# 
   639  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   640                           PIE2 equ 08Dh ;# 
   641  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   642                           PCON equ 08Eh ;# 
   643  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   644                           OSCCON equ 08Fh ;# 
   645  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   646                           OSCTUNE equ 090h ;# 
   647  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   648                           SSPCON2 equ 091h ;# 
   649  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   650                           PR2 equ 092h ;# 
   651  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   652                           SSPADD equ 093h ;# 
   653  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   654                           SSPMSK equ 093h ;# 
   655  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   656                           MSK equ 093h ;# 
   657  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   658                           SSPSTAT equ 094h ;# 
   659  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   660                           WPUB equ 095h ;# 
   661  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   662                           IOCB equ 096h ;# 
   663  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   664                           VRCON equ 097h ;# 
   665  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   666                           TXSTA equ 098h ;# 
   667  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   668                           SPBRG equ 099h ;# 
   669  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   670                           SPBRGH equ 09Ah ;# 
   671  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   672                           PWM1CON equ 09Bh ;# 
   673  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   674                           ECCPAS equ 09Ch ;# 
   675  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   676                           PSTRCON equ 09Dh ;# 
   677  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   678                           ADRESL equ 09Eh ;# 
   679  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   680                           ADCON1 equ 09Fh ;# 
   681  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   682                           WDTCON equ 0105h ;# 
   683  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   684                           CM1CON0 equ 0107h ;# 
   685  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   686                           CM2CON0 equ 0108h ;# 
   687  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   688                           CM2CON1 equ 0109h ;# 
   689  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   690                           EEDATA equ 010Ch ;# 
   691  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   692                           EEDAT equ 010Ch ;# 
   693  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   694                           EEADR equ 010Dh ;# 
   695  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   696                           EEDATH equ 010Eh ;# 
   697  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   698                           EEADRH equ 010Fh ;# 
   699  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   700                           SRCON equ 0185h ;# 
   701  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   702                           BAUDCTL equ 0187h ;# 
   703  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   704                           ANSEL equ 0188h ;# 
   705  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   706                           ANSELH equ 0189h ;# 
   707  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   708                           EECON1 equ 018Ch ;# 
   709  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   710                           EECON2 equ 018Dh ;# 
   711  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   712                           INDF equ 00h ;# 
   713  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   714                           TMR0 equ 01h ;# 
   715  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   716                           PCL equ 02h ;# 
   717  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   718                           STATUS equ 03h ;# 
   719  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   720                           FSR equ 04h ;# 
   721  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   722                           PORTA equ 05h ;# 
   723  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   724                           PORTB equ 06h ;# 
   725  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   726                           PORTC equ 07h ;# 
   727  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   728                           PORTD equ 08h ;# 
   729  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   730                           PORTE equ 09h ;# 
   731  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   732                           PCLATH equ 0Ah ;# 
   733  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   734                           INTCON equ 0Bh ;# 
   735  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   736                           PIR1 equ 0Ch ;# 
   737  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   738                           PIR2 equ 0Dh ;# 
   739  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   740                           TMR1 equ 0Eh ;# 
   741  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   742                           TMR1L equ 0Eh ;# 
   743  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   744                           TMR1H equ 0Fh ;# 
   745  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   746                           T1CON equ 010h ;# 
   747  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   748                           TMR2 equ 011h ;# 
   749  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   750                           T2CON equ 012h ;# 
   751  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   752                           SSPBUF equ 013h ;# 
   753  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   754                           SSPCON equ 014h ;# 
   755  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   756                           CCPR1 equ 015h ;# 
   757  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   758                           CCPR1L equ 015h ;# 
   759  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   760                           CCPR1H equ 016h ;# 
   761  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   762                           CCP1CON equ 017h ;# 
   763  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   764                           RCSTA equ 018h ;# 
   765  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   766                           TXREG equ 019h ;# 
   767  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   768                           RCREG equ 01Ah ;# 
   769  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   770                           CCPR2 equ 01Bh ;# 
   771  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   772                           CCPR2L equ 01Bh ;# 
   773  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   774                           CCPR2H equ 01Ch ;# 
   775  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   776                           CCP2CON equ 01Dh ;# 
   777  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   778                           ADRESH equ 01Eh ;# 
   779  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   780                           ADCON0 equ 01Fh ;# 
   781  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   782                           OPTION_REG equ 081h ;# 
   783  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   784                           TRISA equ 085h ;# 
   785  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   786                           TRISB equ 086h ;# 
   787  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   788                           TRISC equ 087h ;# 
   789  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   790                           TRISD equ 088h ;# 
   791  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   792                           TRISE equ 089h ;# 
   793  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   794                           PIE1 equ 08Ch ;# 
   795  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   796                           PIE2 equ 08Dh ;# 
   797  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   798                           PCON equ 08Eh ;# 
   799  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   800                           OSCCON equ 08Fh ;# 
   801  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   802                           OSCTUNE equ 090h ;# 
   803  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   804                           SSPCON2 equ 091h ;# 
   805  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   806                           PR2 equ 092h ;# 
   807  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   808                           SSPADD equ 093h ;# 
   809  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   810                           SSPMSK equ 093h ;# 
   811  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   812                           MSK equ 093h ;# 
   813  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   814                           SSPSTAT equ 094h ;# 
   815  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   816                           WPUB equ 095h ;# 
   817  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   818                           IOCB equ 096h ;# 
   819  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   820                           VRCON equ 097h ;# 
   821  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   822                           TXSTA equ 098h ;# 
   823  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   824                           SPBRG equ 099h ;# 
   825  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   826                           SPBRGH equ 09Ah ;# 
   827  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   828                           PWM1CON equ 09Bh ;# 
   829  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   830                           ECCPAS equ 09Ch ;# 
   831  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   832                           PSTRCON equ 09Dh ;# 
   833  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   834                           ADRESL equ 09Eh ;# 
   835  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   836                           ADCON1 equ 09Fh ;# 
   837  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   838                           WDTCON equ 0105h ;# 
   839  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   840                           CM1CON0 equ 0107h ;# 
   841  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   842                           CM2CON0 equ 0108h ;# 
   843  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   844                           CM2CON1 equ 0109h ;# 
   845  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   846                           EEDATA equ 010Ch ;# 
   847  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   848                           EEDAT equ 010Ch ;# 
   849  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   850                           EEADR equ 010Dh ;# 
   851  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   852                           EEDATH equ 010Eh ;# 
   853  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   854                           EEADRH equ 010Fh ;# 
   855  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   856                           SRCON equ 0185h ;# 
   857  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   858                           BAUDCTL equ 0187h ;# 
   859  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   860                           ANSEL equ 0188h ;# 
   861  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   862                           ANSELH equ 0189h ;# 
   863  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   864                           EECON1 equ 018Ch ;# 
   865  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   866                           EECON2 equ 018Dh ;# 
   867  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   868                           INDF equ 00h ;# 
   869  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   870                           TMR0 equ 01h ;# 
   871  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   872                           PCL equ 02h ;# 
   873  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   874                           STATUS equ 03h ;# 
   875  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   876                           FSR equ 04h ;# 
   877  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   878                           PORTA equ 05h ;# 
   879  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   880                           PORTB equ 06h ;# 
   881  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   882                           PORTC equ 07h ;# 
   883  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   884                           PORTD equ 08h ;# 
   885  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   886                           PORTE equ 09h ;# 
   887  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   888                           PCLATH equ 0Ah ;# 
   889  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   890                           INTCON equ 0Bh ;# 
   891  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   892                           PIR1 equ 0Ch ;# 
   893  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   894                           PIR2 equ 0Dh ;# 
   895  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   896                           TMR1 equ 0Eh ;# 
   897  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   898                           TMR1L equ 0Eh ;# 
   899  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   900                           TMR1H equ 0Fh ;# 
   901  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   902                           T1CON equ 010h ;# 
   903  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   904                           TMR2 equ 011h ;# 
   905  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   906                           T2CON equ 012h ;# 
   907  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   908                           SSPBUF equ 013h ;# 
   909  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   910                           SSPCON equ 014h ;# 
   911  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   912                           CCPR1 equ 015h ;# 
   913  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   914                           CCPR1L equ 015h ;# 
   915  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   916                           CCPR1H equ 016h ;# 
   917  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   918                           CCP1CON equ 017h ;# 
   919  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   920                           RCSTA equ 018h ;# 
   921  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   922                           TXREG equ 019h ;# 
   923  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   924                           RCREG equ 01Ah ;# 
   925  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   926                           CCPR2 equ 01Bh ;# 
   927  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   928                           CCPR2L equ 01Bh ;# 
   929  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   930                           CCPR2H equ 01Ch ;# 
   931  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   932                           CCP2CON equ 01Dh ;# 
   933  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   934                           ADRESH equ 01Eh ;# 
   935  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   936                           ADCON0 equ 01Fh ;# 
   937  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   938                           OPTION_REG equ 081h ;# 
   939  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   940                           TRISA equ 085h ;# 
   941  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   942                           TRISB equ 086h ;# 
   943  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   944                           TRISC equ 087h ;# 
   945  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   946                           TRISD equ 088h ;# 
   947  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   948                           TRISE equ 089h ;# 
   949  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   950                           PIE1 equ 08Ch ;# 
   951  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   952                           PIE2 equ 08Dh ;# 
   953  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   954                           PCON equ 08Eh ;# 
   955  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   956                           OSCCON equ 08Fh ;# 
   957  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   958                           OSCTUNE equ 090h ;# 
   959  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   960                           SSPCON2 equ 091h ;# 
   961  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   962                           PR2 equ 092h ;# 
   963  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   964                           SSPADD equ 093h ;# 
   965  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   966                           SSPMSK equ 093h ;# 
   967  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   968                           MSK equ 093h ;# 
   969  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   970                           SSPSTAT equ 094h ;# 
   971  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   972                           WPUB equ 095h ;# 
   973  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   974                           IOCB equ 096h ;# 
   975  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   976                           VRCON equ 097h ;# 
   977  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   978                           TXSTA equ 098h ;# 
   979  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   980                           SPBRG equ 099h ;# 
   981  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   982                           SPBRGH equ 09Ah ;# 
   983  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   984                           PWM1CON equ 09Bh ;# 
   985  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   986                           ECCPAS equ 09Ch ;# 
   987  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   988                           PSTRCON equ 09Dh ;# 
   989  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   990                           ADRESL equ 09Eh ;# 
   991  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   992                           ADCON1 equ 09Fh ;# 
   993  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   994                           WDTCON equ 0105h ;# 
   995  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   996                           CM1CON0 equ 0107h ;# 
   997  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   998                           CM2CON0 equ 0108h ;# 
   999  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1000                           CM2CON1 equ 0109h ;# 
  1001  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1002                           EEDATA equ 010Ch ;# 
  1003  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1004                           EEDAT equ 010Ch ;# 
  1005  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1006                           EEADR equ 010Dh ;# 
  1007  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1008                           EEDATH equ 010Eh ;# 
  1009  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1010                           EEADRH equ 010Fh ;# 
  1011  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1012                           SRCON equ 0185h ;# 
  1013  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1014                           BAUDCTL equ 0187h ;# 
  1015  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1016                           ANSEL equ 0188h ;# 
  1017  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1018                           ANSELH equ 0189h ;# 
  1019  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1020                           EECON1 equ 018Ch ;# 
  1021  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1022                           EECON2 equ 018Dh ;# 
  1023  018D  ;; Function _dispLCD_num is unused but had its address taken
  1024                           global _dispLCD_num
  1025                           _dispLCD_num equ 0
  1026  0000  ;; Function _dispLCD_clr is unused but had its address taken
  1027                           global _dispLCD_clr
  1028                           _dispLCD_clr equ 0
  1029  0000  ;; Function _dispLCD_B0 is unused but had its address taken
  1030                           global _dispLCD_B0
  1031                           _dispLCD_B0 equ 0
  1032  0000  ;; Function _dispLCD_B1 is unused but had its address taken
  1033                           global _dispLCD_B1
  1034                           _dispLCD_B1 equ 0
  1035  0000  ;; Function _previousKey is unused but had its address taken
  1036                           global _previousKey
  1037                           _previousKey equ 0
  1038  0000  ;; Function _currentKey is unused but had its address taken
  1039                           global _currentKey
  1040                           _currentKey equ 0
  1041  0000  ;; Function _keyboard_scan is unused but had its address taken
  1042                           global _keyboard_scan
  1043                           _keyboard_scan equ 0
  1044  0000  ;; Function _rxResetErrorEUSART is unused but had its address taken
  1045                           global _rxResetErrorEUSART
  1046                           _rxResetErrorEUSART equ 0
  1047  0000  ;; Function _txEUSART is unused but had its address taken
  1048                           global _txEUSART
  1049                           _txEUSART equ 0
  1050  0000  ;; Function _txStatusEUSART is unused but had its address taken
  1051                           global _txStatusEUSART
  1052                           _txStatusEUSART equ 0
  1053  0000                     	FNCALL	_main,_dispLCD
  1054                           	FNCALL	_main,_dispLCD_init
  1055                           	FNCALL	_main,_dispLCDstr
  1056                           	FNCALL	_main,_initEUSART
  1057                           	FNCALL	_main,_keyboard_init
  1058                           	FNCALL	_main,_rxEUSART
  1059                           	FNCALL	_main,_rxErrorEUSART
  1060                           	FNCALL	_main,_rxStatusEUSART
  1061                           	FNCALL	_dispLCDstr,_dispLCD_dataReg
  1062                           	FNCALL	_dispLCDstr,_dispLCD_lincol
  1063                           	FNCALL	_dispLCD_init,_delay
  1064                           	FNCALL	_dispLCD_init,_dispLCD_instReg
  1065                           	FNCALL	_dispLCD_init,_dispLCD_newChar
  1066                           	FNCALL	_dispLCD_newChar,_dispLCD_dataReg
  1067                           	FNCALL	_dispLCD_newChar,_dispLCD_instReg
  1068                           	FNCALL	_dispLCD,_dispLCD_dataReg
  1069                           	FNCALL	_dispLCD,_dispLCD_lincol
  1070                           	FNCALL	_dispLCD_lincol,_dispLCD_instReg
  1071                           	FNROOT	_main
  1072                           	global	_eusart
  1073                           	global	_print
  1074                           	global	_keyboard
  1075                           	global	_vetor
  1076                           psect	idataBANK0,class=CODE,space=0,delta=2,noexec
  1077                           global __pidataBANK0
  1078                           __pidataBANK0:
  1079  0573                     	file	"./ihm.h"
  1080                           	line	37
  1081                           
  1082                           ;initializer for _eusart
  1083                           	retlw	low((fp__rxEUSART-fpbase))
  1084  0573  3410               	retlw	low((fp__rxStatusEUSART-fpbase))
  1085  0574  3416               	retlw	low((fp__rxErrorEUSART-fpbase))
  1086  0575  3413               	retlw	low(0)
  1087  0576  3400               	retlw	low(0)
  1088  0577  3400               	retlw	low(0)
  1089  0578  3400               	retlw	low((fp__initEUSART-fpbase))
  1090  0579  340A               	line	17
  1091                           
  1092                           ;initializer for _print
  1093                           	retlw	low((fp__dispLCD_init-fpbase))
  1094  057A  3404               	retlw	low((fp__dispLCDstr-fpbase))
  1095  057B  3407               	retlw	low((fp__dispLCD-fpbase))
  1096  057C  3401               	retlw	low(0)
  1097  057D  3400               	retlw	low(0)
  1098  057E  3400               	retlw	low(0)
  1099  057F  3400               	retlw	low(0)
  1100  0580  3400               	line	26
  1101                           
  1102                           ;initializer for _keyboard
  1103                           	retlw	low(0)
  1104  0581  3400               	retlw	low(0)
  1105  0582  3400               	retlw	low(0)
  1106  0583  3400               	retlw	low((fp__keyboard_init-fpbase))
  1107  0584  340D               	file	"main.c"
  1108                           	line	16
  1109                           
  1110                           ;initializer for _vetor
  1111                           	retlw	020h
  1112  0585  3420               	retlw	020h
  1113  0586  3420               	retlw	020h
  1114  0587  3420               	retlw	020h
  1115  0588  3420               	retlw	020h
  1116  0589  3420               	retlw	020h
  1117  058A  3420               	retlw	020h
  1118  058B  3420               	retlw	020h
  1119  058C  3420               	retlw	020h
  1120  058D  3420               	retlw	020h
  1121  058E  3420               	retlw	020h
  1122  058F  3420               	retlw	020h
  1123  0590  3420               	retlw	020h
  1124  0591  3420               	retlw	020h
  1125  0592  3420               	retlw	020h
  1126  0593  3420               	retlw	020h
  1127  0594  3420               	retlw	020h
  1128  0595  3420               	global	_keyboardMatrix
  1129                           psect	strings,class=STRING,delta=2,noexec
  1130                           global __pstrings
  1131                           __pstrings:
  1132  0021                     stringtab:
  1133  0021                     	global    __stringtab
  1134                           __stringtab:
  1135  0021                     ;	String table - string pointers are 1 byte each
  1136                           	btfsc	(btemp+1),7
  1137  0021  1BFF               	ljmp	stringcode
  1138  0022  282B               	bcf	status,7
  1139  0023  1383               	btfsc	(btemp+1),0
  1140  0024  187F               	bsf	status,7
  1141  0025  1783               	movf	indf,w
  1142  0026  0800               	incf fsr
  1143  0027  0A84               skipnz
  1144  0028  1903               incf btemp+1
  1145  0029  0AFF               	return
  1146  002A  0008               stringcode:stringdir:
  1147  002B                     movlw high(stringdir)
      + 002B                     stringdir:	
  1148  002B  3000               movwf pclath
  1149  002C  008A               movf fsr,w
  1150  002D  0804               incf fsr
  1151  002E  0A84               	addwf pc
  1152  002F  0782               	global __stringbase
  1153                           __stringbase:
  1154  0030                     	retlw	0
  1155  0030  3400               psect	strings
  1156                           	global    __end_of__stringtab
  1157                           __end_of__stringtab:
  1158  0031                     	file	"keyboard.c"
  1159                           	line	40
  1160                           _keyboardMatrix:
  1161  0031                     	retlw	031h
  1162  0031  3431               	retlw	032h
  1163  0032  3432               	retlw	033h
  1164  0033  3433               	retlw	041h
  1165  0034  3441               	retlw	034h
  1166  0035  3434               	retlw	035h
  1167  0036  3435               	retlw	036h
  1168  0037  3436               	retlw	042h
  1169  0038  3442               	retlw	037h
  1170  0039  3437               	retlw	038h
  1171  003A  3438               	retlw	039h
  1172  003B  3439               	retlw	043h
  1173  003C  3443               	retlw	02Ah
  1174  003D  342A               	retlw	030h
  1175  003E  3430               	retlw	023h
  1176  003F  3423               	retlw	044h
  1177  0040  3444               	global __end_of_keyboardMatrix
  1178                           __end_of_keyboardMatrix:
  1179  0041                     	global	_newChar_degree
  1180                           psect	strings
  1181                           	file	"lcd.c"
  1182                           	line	31
  1183                           _newChar_degree:
  1184  0041                     	retlw	04h
  1185  0041  3404               	retlw	0Ah
  1186  0042  340A               	retlw	04h
  1187  0043  3404               	retlw	low(0)
  1188  0044  3400               	retlw	low(0)
  1189  0045  3400               	retlw	low(0)
  1190  0046  3400               	retlw	low(0)
  1191  0047  3400               	retlw	low(0)
  1192  0048  3400               	global __end_of_newChar_degree
  1193                           __end_of_newChar_degree:
  1194  0049                     	global	_keyboardMatrix
  1195                           	global	_newChar_degree
  1196                           	global	_currKey
  1197                           	global	_prevKey
  1198                           	global	_TXREG
  1199                           _TXREG	set	0x19
  1200  0019                     	global	_RCSTAbits
  1201                           _RCSTAbits	set	0x18
  1202  0018                     	global	_PIR1bits
  1203                           _PIR1bits	set	0xC
  1204  000C                     	global	_RCREG
  1205                           _RCREG	set	0x1A
  1206  001A                     	global	_PORTB
  1207                           _PORTB	set	0x6
  1208  0006                     	global	_KEYBOARDbits
  1209                           _KEYBOARDbits	set	0x6
  1210  0006                     	global	_LCDbits
  1211                           _LCDbits	set	8
  1212  0008                     	global	_SPBRbits
  1213                           _SPBRbits	set	0x99
  1214  0099                     	global	_TXSTAbits
  1215                           _TXSTAbits	set	0x98
  1216  0098                     	global	_OPTION_REGbits
  1217                           _OPTION_REGbits	set	0x81
  1218  0081                     	global	_WPUB
  1219                           _WPUB	set	0x95
  1220  0095                     	global	_TRISB
  1221                           _TRISB	set	0x86
  1222  0086                     	global	_TRISDbits
  1223                           _TRISDbits	set	0x88
  1224  0088                     	global	_BAUDCTLbits
  1225                           _BAUDCTLbits	set	0x187
  1226  0187                     	global	_ANSELH
  1227                           _ANSELH	set	0x189
  1228  0189                     	
  1229                           STR_1:	
  1230  0049                     	retlw	69	;'E'
  1231  0049  3445               	retlw	85	;'U'
  1232  004A  3455               	retlw	83	;'S'
  1233  004B  3453               	retlw	65	;'A'
  1234  004C  3441               	retlw	82	;'R'
  1235  004D  3452               	retlw	84	;'T'
  1236  004E  3454               	retlw	32	;' '
  1237  004F  3420               	retlw	32	;' '
  1238  0050  3420               	retlw	32	;' '
  1239  0051  3420               	retlw	32	;' '
  1240  0052  3420               	retlw	32	;' '
  1241  0053  3420               	retlw	32	;' '
  1242  0054  3420               	retlw	32	;' '
  1243  0055  3420               	retlw	32	;' '
  1244  0056  3420               	retlw	32	;' '
  1245  0057  3420               	retlw	32	;' '
  1246  0058  3420               	retlw	32	;' '
  1247  0059  3420               	retlw	0
  1248  005A  3400               psect	strings
  1249                           	
  1250                           STR_3:	
  1251  005B                     	retlw	70	;'F'
  1252  005B  3446               	retlw	114	;'r'
  1253  005C  3472               	retlw	97	;'a'
  1254  005D  3461               	retlw	109	;'m'
  1255  005E  346D               	retlw	105	;'i'
  1256  005F  3469               	retlw	110	;'n'
  1257  0060  346E               	retlw	103	;'g'
  1258  0061  3467               	retlw	32	;' '
  1259  0062  3420               	retlw	69	;'E'
  1260  0063  3445               	retlw	114	;'r'
  1261  0064  3472               	retlw	114	;'r'
  1262  0065  3472               	retlw	111	;'o'
  1263  0066  346F               	retlw	114	;'r'
  1264  0067  3472               	retlw	0
  1265  0068  3400               psect	strings
  1266                           	
  1267                           STR_2:	
  1268  0069                     	retlw	79	;'O'
  1269  0069  344F               	retlw	118	;'v'
  1270  006A  3476               	retlw	101	;'e'
  1271  006B  3465               	retlw	114	;'r'
  1272  006C  3472               	retlw	114	;'r'
  1273  006D  3472               	retlw	117	;'u'
  1274  006E  3475               	retlw	110	;'n'
  1275  006F  346E               	retlw	32	;' '
  1276  0070  3420               	retlw	69	;'E'
  1277  0071  3445               	retlw	114	;'r'
  1278  0072  3472               	retlw	114	;'r'
  1279  0073  3472               	retlw	111	;'o'
  1280  0074  346F               	retlw	114	;'r'
  1281  0075  3472               	retlw	0
  1282  0076  3400               psect	strings
  1283                           ; #config settings
  1284                           global __CFG_FOSC$INTRC_NOCLKOUT
  1285                           __CFG_FOSC$INTRC_NOCLKOUT equ 0x0
  1286  0000                     global __CFG_WDTE$OFF
  1287                           __CFG_WDTE$OFF equ 0x0
  1288  0000                     global __CFG_PWRTE$OFF
  1289                           __CFG_PWRTE$OFF equ 0x0
  1290  0000                     global __CFG_MCLRE$OFF
  1291                           __CFG_MCLRE$OFF equ 0x0
  1292  0000                     global __CFG_CP$OFF
  1293                           __CFG_CP$OFF equ 0x0
  1294  0000                     global __CFG_CPD$OFF
  1295                           __CFG_CPD$OFF equ 0x0
  1296  0000                     global __CFG_BOREN$OFF
  1297                           __CFG_BOREN$OFF equ 0x0
  1298  0000                     global __CFG_IESO$OFF
  1299                           __CFG_IESO$OFF equ 0x0
  1300  0000                     global __CFG_FCMEN$OFF
  1301                           __CFG_FCMEN$OFF equ 0x0
  1302  0000                     global __CFG_LVP$OFF
  1303                           __CFG_LVP$OFF equ 0x0
  1304  0000                     global __CFG_BOR4V$BOR40V
  1305                           __CFG_BOR4V$BOR40V equ 0x0
  1306  0000                     global __CFG_WRT$OFF
  1307                           __CFG_WRT$OFF equ 0x0
  1308  0000                     	file	"C:\Users\20187263\AppData\Local\Temp\shp8."
  1309                           	line	#
  1310                           psect cinit,class=CODE,delta=2
  1311                           global start_initialization
  1312                           start_initialization:
  1313  07EC                     
  1314                           global __initialization
  1315                           __initialization:
  1316  07EC                     psect	bssBANK0,class=BANK0,space=1,noexec
  1317                           global __pbssBANK0
  1318                           __pbssBANK0:
  1319  0043                     _currKey:
  1320  0043                            ds      1
  1321  0043                     
  1322                           _prevKey:
  1323  0044                            ds      1
  1324  0044                     
  1325                           psect	dataBANK0,class=BANK0,space=1,noexec
  1326                           global __pdataBANK0
  1327                           __pdataBANK0:
  1328  0020                     	file	"./ihm.h"
  1329                           	line	37
  1330                           _eusart:
  1331  0020                            ds      7
  1332  0020                     
  1333                           psect	dataBANK0
  1334                           	file	"./ihm.h"
  1335                           	line	17
  1336                           _print:
  1337  0027                            ds      7
  1338  0027                     
  1339                           psect	dataBANK0
  1340                           	file	"./ihm.h"
  1341                           	line	26
  1342                           _keyboard:
  1343  002E                            ds      4
  1344  002E                     
  1345                           psect	dataBANK0
  1346                           	file	"main.c"
  1347                           	line	16
  1348                           _vetor:
  1349  0032                            ds      17
  1350  0032                     
  1351                           	file	"C:\Users\20187263\AppData\Local\Temp\shp8."
  1352                           	line	#
  1353                           global btemp
  1354                           psect inittext,class=CODE,delta=2
  1355                           global init_fetch0,btemp
  1356                           ;	Called with low address in FSR and high address in W
  1357                           init_fetch0:
  1358  051B                     	movf btemp,w
  1359  051B  087E               	movwf pclath
  1360  051C  008A               	movf btemp+1,w
  1361  051D  087F               	movwf pc
  1362  051E  0082               global init_ram0
  1363                           ;Called with:
  1364                           ;	high address of idata address in btemp 
  1365                           ;	low address of idata address in btemp+1 
  1366                           ;	low address of data in FSR
  1367                           ;	high address + 1 of data in btemp-1
  1368                           init_ram0:
  1369  051F                     	fcall init_fetch0
  1370  051F  120A  118A  251B  120A  118A  	movwf indf,f
  1371  0524  0080               	incf fsr,f
  1372  0525  0A84               	movf fsr,w
  1373  0526  0804               	xorwf btemp-1,w
  1374  0527  067D               	btfsc status,2
  1375  0528  1903               	retlw 0
  1376  0529  3400               	incf btemp+1,f
  1377  052A  0AFF               	btfsc status,2
  1378  052B  1903               	incf btemp,f
  1379  052C  0AFE               	goto init_ram0
  1380  052D  2D1F               ; Initialize objects allocated to BANK0
  1381                           psect cinit,class=CODE,delta=2,merge=1
  1382                           global init_ram0, __pidataBANK0
  1383                           	bcf	status, 7	;select IRP bank0
  1384  07EC  1383               	movlw low(__pdataBANK0+35)
  1385  07ED  3043               	movwf btemp-1,f
  1386  07EE  00FD               	movlw high(__pidataBANK0)
  1387  07EF  3005               	movwf btemp,f
  1388  07F0  00FE               	movlw low(__pidataBANK0)
  1389  07F1  3073               	movwf btemp+1,f
  1390  07F2  00FF               	movlw low(__pdataBANK0)
  1391  07F3  3020               	movwf fsr,f
  1392  07F4  0084               	fcall init_ram0
  1393  07F5  120A  118A  251F  120A  118A  	line	#
  1394                           ; Clear objects allocated to BANK0
  1395                           psect cinit,class=CODE,delta=2,merge=1
  1396                           	clrf	((__pbssBANK0)+0)&07Fh
  1397  07FA  01C3               	clrf	((__pbssBANK0)+1)&07Fh
  1398  07FB  01C4               psect cinit,class=CODE,delta=2,merge=1
  1399                           global end_of_initialization,__end_of__initialization
  1400                           
  1401                           ;End of C runtime variable initialization code
  1402                           
  1403                           end_of_initialization:
  1404  07FC                     __end_of__initialization:
  1405  07FC                     clrf status
  1406  07FC  0183               ljmp _main	;jump to C main() function
  1407  07FD  120A  118A  2F35   psect	cstackCOMMON,class=COMMON,space=1,noexec
  1408                           global __pcstackCOMMON
  1409                           __pcstackCOMMON:
  1410  0070                     ?_dispLCD_init:	; 1 bytes @ 0x0
  1411  0070                     ?_keyboard_init:	; 1 bytes @ 0x0
  1412  0070                     ??_keyboard_init:	; 1 bytes @ 0x0
  1413  0070                     ?_rxEUSART:	; 1 bytes @ 0x0
  1414  0070                     ??_rxEUSART:	; 1 bytes @ 0x0
  1415  0070                     ?_rxStatusEUSART:	; 1 bytes @ 0x0
  1416  0070                     ??_rxStatusEUSART:	; 1 bytes @ 0x0
  1417  0070                     ?_rxErrorEUSART:	; 1 bytes @ 0x0
  1418  0070                     ??_rxErrorEUSART:	; 1 bytes @ 0x0
  1419  0070                     ?_initEUSART:	; 1 bytes @ 0x0
  1420  0070                     ?_main:	; 1 bytes @ 0x0
  1421  0070                     ?_delay:	; 1 bytes @ 0x0
  1422  0070                     ?_dispLCD_instReg:	; 1 bytes @ 0x0
  1423  0070                     ??_dispLCD_instReg:	; 1 bytes @ 0x0
  1424  0070                     ?_dispLCD_dataReg:	; 1 bytes @ 0x0
  1425  0070                     ??_dispLCD_dataReg:	; 1 bytes @ 0x0
  1426  0070                     	global	delay@t
  1427                           delay@t:	; 2 bytes @ 0x0
  1428  0070                     	global	initEUSART@baudRate
  1429                           initEUSART@baudRate:	; 4 bytes @ 0x0
  1430  0070                     	ds	1
  1431  0070                     	global	dispLCD_dataReg@d
  1432                           dispLCD_dataReg@d:	; 1 bytes @ 0x1
  1433  0071                     	ds	1
  1434  0071                     ??_delay:	; 1 bytes @ 0x2
  1435  0072                     	global	dispLCD_instReg@i
  1436                           dispLCD_instReg@i:	; 1 bytes @ 0x2
  1437  0072                     	ds	1
  1438  0072                     ?_dispLCD_lincol:	; 1 bytes @ 0x3
  1439  0073                     ?_dispLCD_newChar:	; 1 bytes @ 0x3
  1440  0073                     	global	dispLCD_lincol@col
  1441                           dispLCD_lincol@col:	; 1 bytes @ 0x3
  1442  0073                     	global	dispLCD_newChar@ptr
  1443                           dispLCD_newChar@ptr:	; 1 bytes @ 0x3
  1444  0073                     	ds	1
  1445  0073                     ??_initEUSART:	; 1 bytes @ 0x4
  1446  0074                     ??_dispLCD_lincol:	; 1 bytes @ 0x4
  1447  0074                     ??_dispLCD_newChar:	; 1 bytes @ 0x4
  1448  0074                     	ds	1
  1449  0074                     	global	dispLCD_lincol@lin
  1450                           dispLCD_lincol@lin:	; 1 bytes @ 0x5
  1451  0075                     	global	dispLCD_newChar@adrs
  1452                           dispLCD_newChar@adrs:	; 1 bytes @ 0x5
  1453  0075                     	ds	1
  1454  0075                     ?_dispLCDstr:	; 1 bytes @ 0x6
  1455  0076                     ?_dispLCD:	; 1 bytes @ 0x6
  1456  0076                     	global	dispLCD_newChar@i
  1457                           dispLCD_newChar@i:	; 1 bytes @ 0x6
  1458  0076                     	global	dispLCD@lin
  1459                           dispLCD@lin:	; 1 bytes @ 0x6
  1460  0076                     	global	dispLCDstr@str
  1461                           dispLCDstr@str:	; 1 bytes @ 0x6
  1462  0076                     	ds	1
  1463  0076                     ??_dispLCD_init:	; 1 bytes @ 0x7
  1464  0077                     ??_dispLCDstr:	; 1 bytes @ 0x7
  1465  0077                     	global	dispLCD@col
  1466                           dispLCD@col:	; 1 bytes @ 0x7
  1467  0077                     	ds	1
  1468  0077                     	global	dispLCD@str
  1469                           dispLCD@str:	; 2 bytes @ 0x8
  1470  0078                     	ds	2
  1471  0078                     ??_dispLCD:	; 1 bytes @ 0xA
  1472  007A                     	ds	1
  1473  007A                     ??_main:	; 1 bytes @ 0xB
  1474  007B                     	ds	2
  1475  007B                     	global	main@i
  1476                           main@i:	; 1 bytes @ 0xD
  1477  007D                     	ds	1
  1478  007D                     ;!
  1479                           ;!Data Sizes:
  1480                           ;!    Strings     46
  1481                           ;!    Constant    24
  1482                           ;!    Data        35
  1483                           ;!    BSS         2
  1484                           ;!    Persistent  0
  1485                           ;!    Stack       0
  1486                           ;!
  1487                           ;!Auto Spaces:
  1488                           ;!    Space          Size  Autos    Used
  1489                           ;!    COMMON           14     14      14
  1490                           ;!    BANK0            80      0      37
  1491                           ;!    BANK1            80      0       0
  1492                           ;!    BANK3            96      0       0
  1493                           ;!    BANK2            96      0       0
  1494                           
  1495                           ;!
  1496                           ;!Pointer List with Targets:
  1497                           ;!
  1498                           ;!    S29$2$2	PTR const unsigned char  size(2) Largest target is 17
  1499                           ;!		 -> vetor(BANK0[17]), STR_3(CODE[14]), STR_2(CODE[14]), 
  1500                           ;!
  1501                           ;!    S29$1$0	PTR const unsigned char  size(1) Largest target is 18
  1502                           ;!		 -> STR_1(CODE[18]), 
  1503                           ;!
  1504                           ;!    dispLCDstr@str	PTR const unsigned char  size(1) Largest target is 18
  1505                           ;!		 -> STR_1(CODE[18]), 
  1506                           ;!
  1507                           ;!    dispLCD@str	PTR const unsigned char  size(2) Largest target is 17
  1508                           ;!		 -> vetor(BANK0[17]), STR_3(CODE[14]), STR_2(CODE[14]), 
  1509                           ;!
  1510                           ;!    dispLCD_newChar@ptr	PTR const unsigned char  size(1) Largest target is 8
  1511                           ;!		 -> newChar_degree(CODE[8]), 
  1512                           ;!
  1513                           ;!    S122$initEUART	PTR FTN(unsigned long ,)void  size(1) Largest target is 1
  1514                           ;!		 -> initEUSART(), 
  1515                           ;!
  1516                           ;!    eusart.initEUART	PTR FTN(unsigned long ,)void  size(1) Largest target is 1
  1517                           ;!		 -> initEUSART(), 
  1518                           ;!
  1519                           ;!    S122$txSTATUS	PTR FTN()unsigned char  size(1) Largest target is 1
  1520                           ;!		 -> txStatusEUSART(), 
  1521                           ;!
  1522                           ;!    eusart.txSTATUS	PTR FTN()unsigned char  size(1) Largest target is 1
  1523                           ;!		 -> txStatusEUSART(), 
  1524                           ;!
  1525                           ;!    S122$txEUSART	PTR FTN(unsigned char ,)void  size(1) Largest target is 1
  1526                           ;!		 -> txEUSART(), 
  1527                           ;!
  1528                           ;!    eusart.txEUSART	PTR FTN(unsigned char ,)void  size(1) Largest target is 1
  1529                           ;!		 -> txEUSART(), 
  1530                           ;!
  1531                           ;!    S122$rxResetERROR	PTR FTN()void  size(1) Largest target is 1
  1532                           ;!		 -> rxResetErrorEUSART(), 
  1533                           ;!
  1534                           ;!    eusart.rxResetERROR	PTR FTN()void  size(1) Largest target is 1
  1535                           ;!		 -> rxResetErrorEUSART(), 
  1536                           ;!
  1537                           ;!    S122$rxERROR	PTR FTN()unsigned char  size(1) Largest target is 1
  1538                           ;!		 -> rxErrorEUSART(), 
  1539                           ;!
  1540                           ;!    eusart.rxERROR	PTR FTN()unsigned char  size(1) Largest target is 1
  1541                           ;!		 -> rxErrorEUSART(), 
  1542                           ;!
  1543                           ;!    S122$rxSTATUS	PTR FTN()unsigned char  size(1) Largest target is 1
  1544                           ;!		 -> rxStatusEUSART(), 
  1545                           ;!
  1546                           ;!    eusart.rxSTATUS	PTR FTN()unsigned char  size(1) Largest target is 1
  1547                           ;!		 -> rxStatusEUSART(), 
  1548                           ;!
  1549                           ;!    S122$rxEUART	PTR FTN()unsigned char  size(1) Largest target is 1
  1550                           ;!		 -> rxEUSART(), 
  1551                           ;!
  1552                           ;!    eusart.rxEUART	PTR FTN()unsigned char  size(1) Largest target is 1
  1553                           ;!		 -> rxEUSART(), 
  1554                           ;!
  1555                           ;!    S94$init	PTR FTN()void  size(1) Largest target is 1
  1556                           ;!		 -> keyboard_init(), 
  1557                           ;!
  1558                           ;!    keyboard.init	PTR FTN()void  size(1) Largest target is 1
  1559                           ;!		 -> keyboard_init(), 
  1560                           ;!
  1561                           ;!    S94$Scan_Tec	PTR FTN()unsigned char  size(1) Largest target is 1
  1562                           ;!		 -> keyboard_scan(), 
  1563                           ;!
  1564                           ;!    keyboard.Scan_Tec	PTR FTN()unsigned char  size(1) Largest target is 1
  1565                           ;!		 -> keyboard_scan(), 
  1566                           ;!
  1567                           ;!    S94$Tec_Atual	PTR FTN()unsigned char  size(1) Largest target is 1
  1568                           ;!		 -> currentKey(), 
  1569                           ;!
  1570                           ;!    keyboard.Tec_Atual	PTR FTN()unsigned char  size(1) Largest target is 1
  1571                           ;!		 -> currentKey(), 
  1572                           ;!
  1573                           ;!    S94$Tec_Ant	PTR FTN()unsigned char  size(1) Largest target is 1
  1574                           ;!		 -> previousKey(), 
  1575                           ;!
  1576                           ;!    keyboard.Tec_Ant	PTR FTN()unsigned char  size(1) Largest target is 1
  1577                           ;!		 -> previousKey(), 
  1578                           ;!
  1579                           ;!    S29$B1	PTR FTN()unsigned char  size(1) Largest target is 1
  1580                           ;!		 -> dispLCD_B1(), 
  1581                           ;!
  1582                           ;!    print.B1	PTR FTN()unsigned char  size(1) Largest target is 1
  1583                           ;!		 -> dispLCD_B1(), 
  1584                           ;!
  1585                           ;!    S29$B0	PTR FTN()unsigned char  size(1) Largest target is 1
  1586                           ;!		 -> dispLCD_B0(), 
  1587                           ;!
  1588                           ;!    print.B0	PTR FTN()unsigned char  size(1) Largest target is 1
  1589                           ;!		 -> dispLCD_B0(), 
  1590                           ;!
  1591                           ;!    S29$clr	PTR FTN()void  size(1) Largest target is 1
  1592                           ;!		 -> dispLCD_clr(), 
  1593                           ;!
  1594                           ;!    print.clr	PTR FTN()void  size(1) Largest target is 1
  1595                           ;!		 -> dispLCD_clr(), 
  1596                           ;!
  1597                           ;!    S29$printv	PTR FTN(unsigned char ,unsigned char ,int ,unsigned char ,)void  size(1
                                 ) Largest target is 1
  1598                           ;!		 -> dispLCD_num(), 
  1599                           ;!
  1600                           ;!    print.printv	PTR FTN(unsigned char ,unsigned char ,int ,unsigned char ,)void  size
                                 (1) Largest target is 1
  1601                           ;!		 -> dispLCD_num(), 
  1602                           ;!
  1603                           ;!    S29$printpos	PTR FTN(unsigned char ,unsigned char ,PTR const unsigned char ,)void 
                                  size(1) Largest target is 1
  1604                           ;!		 -> dispLCD(), 
  1605                           ;!
  1606                           ;!    print.printpos	PTR FTN(unsigned char ,unsigned char ,PTR const unsigned char ,)voi
                                 d  size(1) Largest target is 1
  1607                           ;!		 -> dispLCD(), 
  1608                           ;!
  1609                           ;!    S29$print	PTR FTN(PTR const unsigned char ,)void  size(1) Largest target is 1
  1610                           ;!		 -> dispLCDstr(), 
  1611                           ;!
  1612                           ;!    print.print	PTR FTN(PTR const unsigned char ,)void  size(1) Largest target is 1
  1613                           ;!		 -> dispLCDstr(), 
  1614                           ;!
  1615                           ;!    S29$init	PTR FTN()void  size(1) Largest target is 1
  1616                           ;!		 -> dispLCD_init(), 
  1617                           ;!
  1618                           ;!    print.init	PTR FTN()void  size(1) Largest target is 1
  1619                           ;!		 -> dispLCD_init(), 
  1620                           ;!
  1621                           
  1622                           
  1623                           ;!
  1624                           ;!Critical Paths under _main in COMMON
  1625                           ;!
  1626                           ;!    _main->_dispLCD
  1627                           ;!    _dispLCDstr->_dispLCD_lincol
  1628                           ;!    _dispLCD_init->_dispLCD_newChar
  1629                           ;!    _dispLCD_newChar->_dispLCD_instReg
  1630                           ;!    _dispLCD->_dispLCD_lincol
  1631                           ;!    _dispLCD_lincol->_dispLCD_instReg
  1632                           ;!
  1633                           ;!Critical Paths under _main in BANK0
  1634                           ;!
  1635                           ;!    None.
  1636                           ;!
  1637                           ;!Critical Paths under _main in BANK1
  1638                           ;!
  1639                           ;!    None.
  1640                           ;!
  1641                           ;!Critical Paths under _main in BANK3
  1642                           ;!
  1643                           ;!    None.
  1644                           ;!
  1645                           ;!Critical Paths under _main in BANK2
  1646                           ;!
  1647                           ;!    None.
  1648                           
  1649 ;;
  1650 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1651 ;;
  1652                           
  1653                           ;!
  1654                           ;!Call Graph Tables:
  1655                           ;!
  1656                           ;! ---------------------------------------------------------------------------------
  1657                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1658                           ;! ---------------------------------------------------------------------------------
  1659                           ;! (0) _main                                                 3     3      0    3006
  1660                           ;!                                             11 COMMON     3     3      0
  1661                           ;!                            _dispLCD *
  1662                           ;!                       _dispLCD_init *
  1663                           ;!                         _dispLCDstr *
  1664                           ;!                         _initEUSART *
  1665                           ;!                      _keyboard_init *
  1666                           ;!                           _rxEUSART *
  1667                           ;!                      _rxErrorEUSART *
  1668                           ;!                     _rxStatusEUSART *
  1669                           ;! ---------------------------------------------------------------------------------
  1670                           ;! (1) _rxStatusEUSART                                       1     1      0       0
  1671                           ;!                                              0 COMMON     1     1      0
  1672                           ;! ---------------------------------------------------------------------------------
  1673                           ;! (1) _rxErrorEUSART                                        0     0      0       0
  1674                           ;! ---------------------------------------------------------------------------------
  1675                           ;! (1) _rxEUSART                                             0     0      0       0
  1676                           ;! ---------------------------------------------------------------------------------
  1677                           ;! (1) _keyboard_init                                        0     0      0       0
  1678                           ;! ---------------------------------------------------------------------------------
  1679                           ;! (1) _initEUSART                                           4     0      4      75
  1680                           ;!                                              0 COMMON     4     0      4
  1681                           ;! ---------------------------------------------------------------------------------
  1682                           ;! (1) _dispLCDstr                                           2     1      1     764
  1683                           ;!                                              6 COMMON     2     1      1
  1684                           ;!                    _dispLCD_dataReg
  1685                           ;!                     _dispLCD_lincol
  1686                           ;! ---------------------------------------------------------------------------------
  1687                           ;! (1) _dispLCD_init                                         1     1      0     911
  1688                           ;!                                              7 COMMON     1     1      0
  1689                           ;!                              _delay
  1690                           ;!                    _dispLCD_instReg
  1691                           ;!                    _dispLCD_newChar
  1692                           ;! ---------------------------------------------------------------------------------
  1693                           ;! (2) _dispLCD_newChar                                      4     3      1     408
  1694                           ;!                                              3 COMMON     4     3      1
  1695                           ;!                    _dispLCD_dataReg
  1696                           ;!                    _dispLCD_instReg
  1697                           ;! ---------------------------------------------------------------------------------
  1698                           ;! (2) _delay                                                3     1      2     327
  1699                           ;!                                              0 COMMON     3     1      2
  1700                           ;! ---------------------------------------------------------------------------------
  1701                           ;! (1) _dispLCD                                              5     1      4    1210
  1702                           ;!                                              6 COMMON     5     1      4
  1703                           ;!                    _dispLCD_dataReg
  1704                           ;!                     _dispLCD_lincol
  1705                           ;! ---------------------------------------------------------------------------------
  1706                           ;! (2) _dispLCD_lincol                                       3     2      1     600
  1707                           ;!                                              3 COMMON     3     2      1
  1708                           ;!                    _dispLCD_instReg
  1709                           ;! ---------------------------------------------------------------------------------
  1710                           ;! (3) _dispLCD_instReg                                      3     3      0     176
  1711                           ;!                                              0 COMMON     3     3      0
  1712                           ;! ---------------------------------------------------------------------------------
  1713                           ;! (2) _dispLCD_dataReg                                      2     2      0      44
  1714                           ;!                                              0 COMMON     2     2      0
  1715                           ;! ---------------------------------------------------------------------------------
  1716                           ;! Estimated maximum stack depth 3
  1717                           ;! ---------------------------------------------------------------------------------
  1718                           ;!
  1719                           ;! Call Graph Graphs:
  1720                           ;!
  1721                           ;! _main (ROOT)
  1722                           ;!   _dispLCD *
  1723                           ;!     _dispLCD_dataReg
  1724                           ;!     _dispLCD_lincol
  1725                           ;!       _dispLCD_instReg
  1726                           ;!   _dispLCD_init *
  1727                           ;!     _delay
  1728                           ;!     _dispLCD_instReg
  1729                           ;!     _dispLCD_newChar
  1730                           ;!       _dispLCD_dataReg
  1731                           ;!       _dispLCD_instReg
  1732                           ;!   _dispLCDstr *
  1733                           ;!     _dispLCD_dataReg
  1734                           ;!     _dispLCD_lincol
  1735                           ;!       _dispLCD_instReg
  1736                           ;!   _initEUSART *
  1737                           ;!   _keyboard_init *
  1738                           ;!   _rxEUSART *
  1739                           ;!   _rxErrorEUSART *
  1740                           ;!   _rxStatusEUSART *
  1741                           ;!
  1742                           
  1743                           ;! Address spaces:
  1744                           
  1745                           ;!Name               Size   Autos  Total    Cost      Usage
  1746                           ;!BANK3               60      0       0       9        0.0%
  1747                           ;!BITBANK3            60      0       0       8        0.0%
  1748                           ;!SFR3                 0      0       0       4        0.0%
  1749                           ;!BITSFR3              0      0       0       4        0.0%
  1750                           ;!BANK2               60      0       0      11        0.0%
  1751                           ;!BITBANK2            60      0       0      10        0.0%
  1752                           ;!SFR2                 0      0       0       5        0.0%
  1753                           ;!BITSFR2              0      0       0       5        0.0%
  1754                           ;!BANK1               50      0       0       7        0.0%
  1755                           ;!BITBANK1            50      0       0       6        0.0%
  1756                           ;!SFR1                 0      0       0       2        0.0%
  1757                           ;!BITSFR1              0      0       0       2        0.0%
  1758                           ;!BANK0               50      0      25       5       46.3%
  1759                           ;!BITBANK0            50      0       0       4        0.0%
  1760                           ;!SFR0                 0      0       0       1        0.0%
  1761                           ;!BITSFR0              0      0       0       1        0.0%
  1762                           ;!COMMON               E      E       E       1      100.0%
  1763                           ;!BITCOMMON            E      0       0       0        0.0%
  1764                           ;!CODE                 0      0       0       0        0.0%
  1765                           ;!DATA                 0      0      33      12        0.0%
  1766                           ;!ABS                  0      0      33       3        0.0%
  1767                           ;!NULL                 0      0       0       0        0.0%
  1768                           ;!STACK                0      0       0       2        0.0%
  1769                           ;!EEDATA             100      0       0       0        0.0%
  1770                           
  1771                           	global	_main
  1772                           
  1773 ;; *************** function _main *****************
  1774 ;; Defined at:
  1775 ;;		line 17 in file "main.c"
  1776 ;; Parameters:    Size  Location     Type
  1777 ;;		None
  1778 ;; Auto vars:     Size  Location     Type
  1779 ;;  i               1   13[COMMON] unsigned char 
  1780 ;; Return value:  Size  Location     Type
  1781 ;;                  1    wreg      void 
  1782 ;; Registers used:
  1783 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1784 ;; Tracked objects:
  1785 ;;		On entry : B00/0
  1786 ;;		On exit  : 0/0
  1787 ;;		Unchanged: 0/0
  1788 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1789 ;;      Params:         0       0       0       0       0
  1790 ;;      Locals:         1       0       0       0       0
  1791 ;;      Temps:          2       0       0       0       0
  1792 ;;      Totals:         3       0       0       0       0
  1793 ;;Total ram usage:        3 bytes
  1794 ;; Hardware stack levels required when called:    3
  1795 ;; This function calls:
  1796 ;;		_dispLCD
  1797 ;;		_dispLCD_init
  1798 ;;		_dispLCDstr
  1799 ;;		_initEUSART
  1800 ;;		_keyboard_init
  1801 ;;		_rxEUSART
  1802 ;;		_rxErrorEUSART
  1803 ;;		_rxStatusEUSART
  1804 ;; This function is called by:
  1805 ;;		Startup code after reset
  1806 ;; This function uses a non-reentrant model
  1807 ;;
  1808                           psect	maintext,global,class=CODE,delta=2,split=1,group=0
  1809                           	file	"main.c"
  1810                           	line	17
  1811                           global __pmaintext
  1812                           __pmaintext:	;psect for function _main
  1813  0735                     psect	maintext
  1814                           	file	"main.c"
  1815                           	line	17
  1816                           	global	__size_of_main
  1817                           	__size_of_main	equ	__end_of_main-_main
  1818  00B7                     	
  1819                           _main:	
  1820  0735                     ;incstack = 0
  1821                           	opt	stack 5
  1822                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1823                           	line	19
  1824                           	
  1825                           l1320:	
  1826  0735                     ;main.c: 19:     print.init();
  1827                           	bcf	status, 5	;RP0=0, select bank0
  1828  0735  1283               	bcf	status, 6	;RP1=0, select bank0
  1829  0736  1303               	movf	(_print),w
  1830  0737  0827               	fcall	fptable
  1831  0738  120A  118A  2003  120A  118A  	line	20
  1832                           	
  1833                           l1322:	
  1834  073D                     ;main.c: 20:     keyboard.init();
  1835                           	bcf	status, 5	;RP0=0, select bank0
  1836  073D  1283               	bcf	status, 6	;RP1=0, select bank0
  1837  073E  1303               	movf	(0+low(_keyboard|((0x0)<<8)+03h)),w
  1838  073F  0831               	fcall	fptable
  1839  0740  120A  118A  2003  120A  118A  	line	21
  1840                           	
  1841                           l1324:	
  1842  0745                     ;main.c: 21:     eusart.initEUART(115200);
  1843                           	movlw	0
  1844  0745  3000               	movwf	(initEUSART@baudRate+3)
  1845  0746  00F3               	movlw	01h
  1846  0747  3001               	movwf	(initEUSART@baudRate+2)
  1847  0748  00F2               	movlw	0C2h
  1848  0749  30C2               	movwf	(initEUSART@baudRate+1)
  1849  074A  00F1               	movlw	0
  1850  074B  3000               	movwf	(initEUSART@baudRate)
  1851  074C  00F0               
  1852                           	bcf	status, 5	;RP0=0, select bank0
  1853  074D  1283               	bcf	status, 6	;RP1=0, select bank0
  1854  074E  1303               	movf	(0+low(_eusart|((0x0)<<8)+06h)),w
  1855  074F  0826               	fcall	fptable
  1856  0750  120A  118A  2003  120A  118A  	line	23
  1857                           	
  1858                           l1326:	
  1859  0755                     ;main.c: 23:     unsigned char i = 0;
  1860                           	clrf	(main@i)
  1861  0755  01FD               	goto	l1328
  1862  0756  2F57               	line	25
  1863                           ;main.c: 25:     while(1)
  1864                           	
  1865                           l49:	
  1866  0757                     	line	27
  1867                           	
  1868                           l1328:	
  1869  0757                     ;main.c: 26:     {;main.c: 27:         print.print("EUSART           ");
  1870                           	movlw	(low((((STR_1)-__stringbase)|8000h)))&0ffh
  1871  0757  3019               	movwf	(??_main+0)+0
  1872  0758  00FB               	movf	(??_main+0)+0,w
  1873  0759  087B               	movwf	(dispLCDstr@str)
  1874  075A  00F6               	bcf	status, 5	;RP0=0, select bank0
  1875  075B  1283               	bcf	status, 6	;RP1=0, select bank0
  1876  075C  1303               	movf	(0+low(_print|((0x0)<<8)+01h)),w
  1877  075D  0828               	fcall	fptable
  1878  075E  120A  118A  2003  120A  118A  	line	29
  1879                           	
  1880                           l1330:	
  1881  0763                     ;main.c: 29:         if(eusart.rxSTATUS())
  1882                           	bcf	status, 5	;RP0=0, select bank0
  1883  0763  1283               	bcf	status, 6	;RP1=0, select bank0
  1884  0764  1303               	movf	(0+low(_eusart|((0x0)<<8)+01h)),w
  1885  0765  0821               	fcall	fptable
  1886  0766  120A  118A  2003  120A  118A  	xorlw	0
  1887  076B  3A00               	skipnz
  1888  076C  1903               	goto	u571
  1889  076D  2F6F               	goto	u570
  1890  076E  2F70               u571:
  1891  076F                     	goto	l1328
  1892  076F  2F57               u570:
  1893  0770                     	goto	l1350
  1894  0770  2FCC               	line	31
  1895                           	
  1896                           l1332:	
  1897  0771                     ;main.c: 30:         {;main.c: 31:             switch(eusart.rxERROR())
  1898                           	goto	l1350
  1899  0771  2FCC               	line	33
  1900                           ;main.c: 32:             {;main.c: 33:                     case 2: print.printpos(1,0, "
                                 Overrun Error");
  1901                           	
  1902                           l52:	
  1903  0772                     	
  1904                           l1334:	
  1905  0772                     	clrf	(dispLCD@lin)
  1906  0772  01F6               	incf	(dispLCD@lin),f
  1907  0773  0AF6               	clrf	(dispLCD@col)
  1908  0774  01F7               	movlw	(low((((STR_2)-__stringbase)|8000h)))&0ffh
  1909  0775  3039               	movwf	(dispLCD@str)
  1910  0776  00F8               	movlw	80h
  1911  0777  3080               	movwf	(dispLCD@str+1)
  1912  0778  00F9               	bcf	status, 5	;RP0=0, select bank0
  1913  0779  1283               	bcf	status, 6	;RP1=0, select bank0
  1914  077A  1303               	movf	(0+low(_print|((0x0)<<8)+02h)),w
  1915  077B  0829               	fcall	fptable
  1916  077C  120A  118A  2003  120A  118A  	line	34
  1917                           	
  1918                           l1336:	
  1919  0781                     ;main.c: 34:                             eusart.rxERROR();
  1920                           	bcf	status, 5	;RP0=0, select bank0
  1921  0781  1283               	bcf	status, 6	;RP1=0, select bank0
  1922  0782  1303               	movf	(0+low(_eusart|((0x0)<<8)+02h)),w
  1923  0783  0822               	fcall	fptable
  1924  0784  120A  118A  2003  120A  118A  	line	35
  1925                           ;main.c: 35:                             break;
  1926                           	goto	l1328
  1927  0789  2F57               	line	36
  1928                           ;main.c: 36:                     case 1: print.printpos(1,0, "Framing Error");
  1929                           	
  1930                           l54:	
  1931  078A                     	
  1932                           l1338:	
  1933  078A                     	clrf	(dispLCD@lin)
  1934  078A  01F6               	incf	(dispLCD@lin),f
  1935  078B  0AF6               	clrf	(dispLCD@col)
  1936  078C  01F7               	movlw	(low((((STR_3)-__stringbase)|8000h)))&0ffh
  1937  078D  302B               	movwf	(dispLCD@str)
  1938  078E  00F8               	movlw	80h
  1939  078F  3080               	movwf	(dispLCD@str+1)
  1940  0790  00F9               	bcf	status, 5	;RP0=0, select bank0
  1941  0791  1283               	bcf	status, 6	;RP1=0, select bank0
  1942  0792  1303               	movf	(0+low(_print|((0x0)<<8)+02h)),w
  1943  0793  0829               	fcall	fptable
  1944  0794  120A  118A  2003  120A  118A  	line	37
  1945                           	
  1946                           l1340:	
  1947  0799                     ;main.c: 37:                             eusart.rxERROR();
  1948                           	bcf	status, 5	;RP0=0, select bank0
  1949  0799  1283               	bcf	status, 6	;RP1=0, select bank0
  1950  079A  1303               	movf	(0+low(_eusart|((0x0)<<8)+02h)),w
  1951  079B  0822               	fcall	fptable
  1952  079C  120A  118A  2003  120A  118A  	line	38
  1953                           ;main.c: 38:                             break;
  1954                           	goto	l1328
  1955  07A1  2F57               	line	39
  1956                           ;main.c: 39:                     default:
  1957                           	
  1958                           l55:	
  1959  07A2                     	goto	l1342
  1960  07A2  2FA3               	line	40
  1961                           ;main.c: 40:                     case 0:
  1962                           	
  1963                           l56:	
  1964  07A3                     	line	41
  1965                           	
  1966                           l1342:	
  1967  07A3                     ;main.c: 41:                            vetor[i] = eusart.rxEUART();
  1968                           	bcf	status, 5	;RP0=0, select bank0
  1969  07A3  1283               	bcf	status, 6	;RP1=0, select bank0
  1970  07A4  1303               	movf	(_eusart),w
  1971  07A5  0820               	fcall	fptable
  1972  07A6  120A  118A  2003  120A  118A  	movwf	(??_main+0)+0
  1973  07AB  00FB               	movf	(main@i),w
  1974  07AC  087D               	addlw	low(_vetor|((0x0)<<8))&0ffh
  1975  07AD  3E32               	movwf	fsr0
  1976  07AE  0084               	movf	(??_main+0)+0,w
  1977  07AF  087B               	bcf	status, 7	;select IRP bank0
  1978  07B0  1383               	movwf	indf
  1979  07B1  0080               	line	42
  1980                           	
  1981                           l1344:	
  1982  07B2                     ;main.c: 42:                            i = ++i % 16;
  1983                           	movlw	low(01h)
  1984  07B2  3001               	movwf	(??_main+0)+0
  1985  07B3  00FB               	movf	(??_main+0)+0,w
  1986  07B4  087B               	addwf	(main@i),f
  1987  07B5  07FD               	movf	((main@i)),w
  1988  07B6  087D               	andlw	0Fh
  1989  07B7  390F               	movwf	(??_main+1)+0
  1990  07B8  00FC               	movf	(??_main+1)+0,w
  1991  07B9  087C               	movwf	(main@i)
  1992  07BA  00FD               	line	43
  1993                           	
  1994                           l1346:	
  1995  07BB                     ;main.c: 43:                            print.printpos(1,0,vetor);
  1996                           	clrf	(dispLCD@lin)
  1997  07BB  01F6               	incf	(dispLCD@lin),f
  1998  07BC  0AF6               	clrf	(dispLCD@col)
  1999  07BD  01F7               	movlw	(low(_vetor|((0x0)<<8))&0ffh)
  2000  07BE  3032               	movwf	(dispLCD@str)
  2001  07BF  00F8               	movlw	(0x0)
  2002  07C0  3000               	movwf	(dispLCD@str+1)
  2003  07C1  00F9               	bcf	status, 5	;RP0=0, select bank0
  2004  07C2  1283               	bcf	status, 6	;RP1=0, select bank0
  2005  07C3  1303               	movf	(0+low(_print|((0x0)<<8)+02h)),w
  2006  07C4  0829               	fcall	fptable
  2007  07C5  120A  118A  2003  120A  118A  	line	44
  2008                           ;main.c: 44:                            break;
  2009                           	goto	l1328
  2010  07CA  2F57               	line	46
  2011                           	
  2012                           l1348:	
  2013  07CB                     ;main.c: 46:           }
  2014                           	goto	l1328
  2015  07CB  2F57               	
  2016                           l51:	
  2017  07CC                     	
  2018                           l1350:	
  2019  07CC                     	bcf	status, 5	;RP0=0, select bank0
  2020  07CC  1283               	bcf	status, 6	;RP1=0, select bank0
  2021  07CD  1303               	movf	(0+low(_eusart|((0x0)<<8)+02h)),w
  2022  07CE  0822               	fcall	fptable
  2023  07CF  120A  118A  2003  120A  118A  	movwf	(??_main+0)+0
  2024  07D4  00FB               	clrf	(??_main+0)+0+1
  2025  07D5  01FC               	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  2026                           ; Switch size 1, requested type "space"
  2027                           ; Number of cases is 1, Range of values is 0 to 0
  2028                           ; switch strategies available:
  2029                           ; Name         Instructions Cycles
  2030                           ; simple_byte            4     3 (average)
  2031                           ; direct_byte           11     8 (fixed)
  2032                           ; jumptable            260     6 (fixed)
  2033                           ;	Chosen strategy is simple_byte
  2034                           
  2035                           	movf 1+(??_main+0)+0,w
  2036  07D6  087C               	opt asmopt_push
  2037                           	opt asmopt_off
  2038                           	xorlw	0^0	; case 0
  2039  07D7  3A00               	skipnz
  2040  07D8  1903               	goto	l1450
  2041  07D9  2FDB               	goto	l1342
  2042  07DA  2FA3               	opt asmopt_pop
  2043                           	
  2044                           l1450:	
  2045  07DB                     ; Switch size 1, requested type "space"
  2046                           ; Number of cases is 3, Range of values is 0 to 2
  2047                           ; switch strategies available:
  2048                           ; Name         Instructions Cycles
  2049                           ; simple_byte           10     6 (average)
  2050                           ; direct_byte           17     8 (fixed)
  2051                           ; jumptable            260     6 (fixed)
  2052                           ;	Chosen strategy is simple_byte
  2053                           
  2054                           	movf 0+(??_main+0)+0,w
  2055  07DB  087B               	opt asmopt_push
  2056                           	opt asmopt_off
  2057                           	xorlw	0^0	; case 0
  2058  07DC  3A00               	skipnz
  2059  07DD  1903               	goto	l1342
  2060  07DE  2FA3               	xorlw	1^0	; case 1
  2061  07DF  3A01               	skipnz
  2062  07E0  1903               	goto	l1338
  2063  07E1  2F8A               	xorlw	2^1	; case 2
  2064  07E2  3A03               	skipnz
  2065  07E3  1903               	goto	l1334
  2066  07E4  2F72               	goto	l1342
  2067  07E5  2FA3               	opt asmopt_pop
  2068                           
  2069                           	
  2070                           l53:	
  2071  07E6                     	goto	l1328
  2072  07E6  2F57               	line	47
  2073                           ;main.c: 47:         }
  2074                           	
  2075                           l50:	
  2076  07E7                     	goto	l1328
  2077  07E7  2F57               	line	48
  2078                           ;main.c: 48:     }
  2079                           	
  2080                           l57:	
  2081  07E8                     	goto	l1328
  2082  07E8  2F57               	
  2083                           l58:	
  2084  07E9                     	line	50
  2085                           	
  2086                           l59:	
  2087  07E9                     	global	start
  2088                           	ljmp	start
  2089  07E9  120A  118A  2800   	opt stack 0
  2090                           GLOBAL	__end_of_main
  2091                           	__end_of_main:
  2092  07EC                     	signat	_main,89
  2093                           	global	_rxStatusEUSART
  2094                           
  2095 ;; *************** function _rxStatusEUSART *****************
  2096 ;; Defined at:
  2097 ;;		line 60 in file "eusart.c"
  2098 ;; Parameters:    Size  Location     Type
  2099 ;;		None
  2100 ;; Auto vars:     Size  Location     Type
  2101 ;;		None
  2102 ;; Return value:  Size  Location     Type
  2103 ;;                  1    wreg      unsigned char 
  2104 ;; Registers used:
  2105 ;;		wreg, status,2, status,0
  2106 ;; Tracked objects:
  2107 ;;		On entry : 0/0
  2108 ;;		On exit  : 0/0
  2109 ;;		Unchanged: 0/0
  2110 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2111 ;;      Params:         0       0       0       0       0
  2112 ;;      Locals:         0       0       0       0       0
  2113 ;;      Temps:          1       0       0       0       0
  2114 ;;      Totals:         1       0       0       0       0
  2115 ;;Total ram usage:        1 bytes
  2116 ;; Hardware stack levels used:    1
  2117 ;; This function calls:
  2118 ;;		Nothing
  2119 ;; This function is called by:
  2120 ;;		_main
  2121 ;; This function uses a non-reentrant model
  2122 ;;
  2123                           psect	text1,local,class=CODE,delta=2,merge=1,group=0
  2124                           	file	"eusart.c"
  2125                           	line	60
  2126                           global __ptext1
  2127                           __ptext1:	;psect for function _rxStatusEUSART
  2128  04EF                     psect	text1
  2129                           	file	"eusart.c"
  2130                           	line	60
  2131                           	global	__size_of_rxStatusEUSART
  2132                           	__size_of_rxStatusEUSART	equ	__end_of_rxStatusEUSART-_rxStatusEUSART
  2133  0008                     	
  2134                           _rxStatusEUSART:	
  2135  04EF                     ;incstack = 0
  2136                           	opt	stack 7
  2137                           ; Regs used in _rxStatusEUSART: [wreg+status,2+status,0]
  2138                           	line	62
  2139                           	
  2140                           l1284:	
  2141  04EF                     ;eusart.c: 62:     return( PIR1bits.RCIF );
  2142                           	bcf	status, 5	;RP0=0, select bank0
  2143  04EF  1283               	bcf	status, 6	;RP1=0, select bank0
  2144  04F0  1303               	swapf	(12),w	;volatile
  2145  04F1  0E0C               	movwf	(??_rxStatusEUSART+0)+0
  2146  04F2  00F0               	rrf	(??_rxStatusEUSART+0)+0,w
  2147  04F3  0C70               	andlw	(1<<1)-1
  2148  04F4  3901               	goto	l202
  2149  04F5  2CF6               	
  2150                           l1286:	
  2151  04F6                     	line	63
  2152                           	
  2153                           l202:	
  2154  04F6                     	return
  2155  04F6  0008               	opt stack 0
  2156                           GLOBAL	__end_of_rxStatusEUSART
  2157                           	__end_of_rxStatusEUSART:
  2158  04F7                     	signat	_rxStatusEUSART,89
  2159                           	global	_rxErrorEUSART
  2160                           
  2161 ;; *************** function _rxErrorEUSART *****************
  2162 ;; Defined at:
  2163 ;;		line 74 in file "eusart.c"
  2164 ;; Parameters:    Size  Location     Type
  2165 ;;		None
  2166 ;; Auto vars:     Size  Location     Type
  2167 ;;		None
  2168 ;; Return value:  Size  Location     Type
  2169 ;;                  1    wreg      unsigned char 
  2170 ;; Registers used:
  2171 ;;		wreg
  2172 ;; Tracked objects:
  2173 ;;		On entry : 0/0
  2174 ;;		On exit  : 0/0
  2175 ;;		Unchanged: 0/0
  2176 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2177 ;;      Params:         0       0       0       0       0
  2178 ;;      Locals:         0       0       0       0       0
  2179 ;;      Temps:          0       0       0       0       0
  2180 ;;      Totals:         0       0       0       0       0
  2181 ;;Total ram usage:        0 bytes
  2182 ;; Hardware stack levels used:    1
  2183 ;; This function calls:
  2184 ;;		Nothing
  2185 ;; This function is called by:
  2186 ;;		_main
  2187 ;; This function uses a non-reentrant model
  2188 ;;
  2189                           psect	text2,local,class=CODE,delta=2,merge=1,group=0
  2190                           	line	74
  2191                           global __ptext2
  2192                           __ptext2:	;psect for function _rxErrorEUSART
  2193  055C                     psect	text2
  2194                           	file	"eusart.c"
  2195                           	line	74
  2196                           	global	__size_of_rxErrorEUSART
  2197                           	__size_of_rxErrorEUSART	equ	__end_of_rxErrorEUSART-_rxErrorEUSART
  2198  0017                     	
  2199                           _rxErrorEUSART:	
  2200  055C                     ;incstack = 0
  2201                           	opt	stack 7
  2202                           ; Regs used in _rxErrorEUSART: [wreg]
  2203                           	line	76
  2204                           	
  2205                           l1288:	
  2206  055C                     ;eusart.c: 76:     if( RCSTAbits.FERR )
  2207                           	bcf	status, 5	;RP0=0, select bank0
  2208  055C  1283               	bcf	status, 6	;RP1=0, select bank0
  2209  055D  1303               	btfss	(24),2	;volatile
  2210  055E  1D18               	goto	u551
  2211  055F  2D61               	goto	u550
  2212  0560  2D62               u551:
  2213  0561                     	goto	l205
  2214  0561  2D66               u550:
  2215  0562                     	line	77
  2216                           	
  2217                           l1290:	
  2218  0562                     ;eusart.c: 77:         return( 1 );
  2219                           	movlw	low(01h)
  2220  0562  3001               	goto	l206
  2221  0563  2D72               	
  2222                           l1292:	
  2223  0564                     	goto	l206
  2224  0564  2D72               	
  2225                           l1294:	
  2226  0565                     	goto	l206
  2227  0565  2D72               	line	78
  2228                           ;eusart.c: 78:     else if( RCSTAbits.OERR )
  2229                           	
  2230                           l205:	
  2231  0566                     	btfss	(24),1	;volatile
  2232  0566  1C98               	goto	u561
  2233  0567  2D69               	goto	u560
  2234  0568  2D6A               u561:
  2235  0569                     	goto	l1302
  2236  0569  2D6E               u560:
  2237  056A                     	line	79
  2238                           	
  2239                           l1296:	
  2240  056A                     ;eusart.c: 79:         return( 2 );
  2241                           	movlw	low(02h)
  2242  056A  3002               	goto	l206
  2243  056B  2D72               	
  2244                           l1298:	
  2245  056C                     	goto	l206
  2246  056C  2D72               	
  2247                           l1300:	
  2248  056D                     	goto	l206
  2249  056D  2D72               	line	80
  2250                           ;eusart.c: 80:     else
  2251                           	
  2252                           l208:	
  2253  056E                     	line	81
  2254                           	
  2255                           l1302:	
  2256  056E                     ;eusart.c: 81:         return( 0 );
  2257                           	movlw	low(0)
  2258  056E  3000               	goto	l206
  2259  056F  2D72               	
  2260                           l1304:	
  2261  0570                     	goto	l206
  2262  0570  2D72               	
  2263                           l209:	
  2264  0571                     	goto	l206
  2265  0571  2D72               	
  2266                           l207:	
  2267  0572                     	line	82
  2268                           	
  2269                           l206:	
  2270  0572                     	return
  2271  0572  0008               	opt stack 0
  2272                           GLOBAL	__end_of_rxErrorEUSART
  2273                           	__end_of_rxErrorEUSART:
  2274  0573                     	signat	_rxErrorEUSART,89
  2275                           	global	_rxEUSART
  2276                           
  2277 ;; *************** function _rxEUSART *****************
  2278 ;; Defined at:
  2279 ;;		line 48 in file "eusart.c"
  2280 ;; Parameters:    Size  Location     Type
  2281 ;;		None
  2282 ;; Auto vars:     Size  Location     Type
  2283 ;;		None
  2284 ;; Return value:  Size  Location     Type
  2285 ;;                  1    wreg      unsigned char 
  2286 ;; Registers used:
  2287 ;;		wreg
  2288 ;; Tracked objects:
  2289 ;;		On entry : 0/0
  2290 ;;		On exit  : 0/0
  2291 ;;		Unchanged: 0/0
  2292 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2293 ;;      Params:         0       0       0       0       0
  2294 ;;      Locals:         0       0       0       0       0
  2295 ;;      Temps:          0       0       0       0       0
  2296 ;;      Totals:         0       0       0       0       0
  2297 ;;Total ram usage:        0 bytes
  2298 ;; Hardware stack levels used:    1
  2299 ;; This function calls:
  2300 ;;		Nothing
  2301 ;; This function is called by:
  2302 ;;		_main
  2303 ;; This function uses a non-reentrant model
  2304 ;;
  2305                           psect	text3,local,class=CODE,delta=2,merge=1,group=0
  2306                           	line	48
  2307                           global __ptext3
  2308                           __ptext3:	;psect for function _rxEUSART
  2309  04EA                     psect	text3
  2310                           	file	"eusart.c"
  2311                           	line	48
  2312                           	global	__size_of_rxEUSART
  2313                           	__size_of_rxEUSART	equ	__end_of_rxEUSART-_rxEUSART
  2314  0005                     	
  2315                           _rxEUSART:	
  2316  04EA                     ;incstack = 0
  2317                           	opt	stack 7
  2318                           ; Regs used in _rxEUSART: [wreg]
  2319                           	line	50
  2320                           	
  2321                           l1280:	
  2322  04EA                     ;eusart.c: 50:     return( RCREG );
  2323                           	bcf	status, 5	;RP0=0, select bank0
  2324  04EA  1283               	bcf	status, 6	;RP1=0, select bank0
  2325  04EB  1303               	movf	(26),w	;volatile
  2326  04EC  081A               	goto	l199
  2327  04ED  2CEE               	
  2328                           l1282:	
  2329  04EE                     	line	51
  2330                           	
  2331                           l199:	
  2332  04EE                     	return
  2333  04EE  0008               	opt stack 0
  2334                           GLOBAL	__end_of_rxEUSART
  2335                           	__end_of_rxEUSART:
  2336  04EF                     	signat	_rxEUSART,89
  2337                           	global	_keyboard_init
  2338                           
  2339 ;; *************** function _keyboard_init *****************
  2340 ;; Defined at:
  2341 ;;		line 104 in file "keyboard.c"
  2342 ;; Parameters:    Size  Location     Type
  2343 ;;		None
  2344 ;; Auto vars:     Size  Location     Type
  2345 ;;		None
  2346 ;; Return value:  Size  Location     Type
  2347 ;;                  1    wreg      void 
  2348 ;; Registers used:
  2349 ;;		wreg, status,2
  2350 ;; Tracked objects:
  2351 ;;		On entry : 0/0
  2352 ;;		On exit  : 0/0
  2353 ;;		Unchanged: 0/0
  2354 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2355 ;;      Params:         0       0       0       0       0
  2356 ;;      Locals:         0       0       0       0       0
  2357 ;;      Temps:          0       0       0       0       0
  2358 ;;      Totals:         0       0       0       0       0
  2359 ;;Total ram usage:        0 bytes
  2360 ;; Hardware stack levels used:    1
  2361 ;; This function calls:
  2362 ;;		Nothing
  2363 ;; This function is called by:
  2364 ;;		_main
  2365 ;; This function uses a non-reentrant model
  2366 ;;
  2367                           psect	text4,local,class=CODE,delta=2,merge=1,group=0
  2368                           	file	"keyboard.c"
  2369                           	line	104
  2370                           global __ptext4
  2371                           __ptext4:	;psect for function _keyboard_init
  2372  04F7                     psect	text4
  2373                           	file	"keyboard.c"
  2374                           	line	104
  2375                           	global	__size_of_keyboard_init
  2376                           	__size_of_keyboard_init	equ	__end_of_keyboard_init-_keyboard_init
  2377  0011                     	
  2378                           _keyboard_init:	
  2379  04F7                     ;incstack = 0
  2380                           	opt	stack 7
  2381                           ; Regs used in _keyboard_init: [wreg+status,2]
  2382                           	line	106
  2383                           	
  2384                           l1268:	
  2385  04F7                     ;keyboard.c: 106:     PORTB = 0;
  2386                           	bcf	status, 5	;RP0=0, select bank0
  2387  04F7  1283               	bcf	status, 6	;RP1=0, select bank0
  2388  04F8  1303               	clrf	(6)	;volatile
  2389  04F9  0186               	line	107
  2390                           ;keyboard.c: 107:     ANSELH = 0;
  2391                           	bsf	status, 5	;RP0=1, select bank3
  2392  04FA  1683               	bsf	status, 6	;RP1=1, select bank3
  2393  04FB  1703               	clrf	(393)^0180h	;volatile
  2394  04FC  0189               	line	108
  2395                           	
  2396                           l1270:	
  2397  04FD                     ;keyboard.c: 108:     TRISB = 0x0F;
  2398                           	movlw	low(0Fh)
  2399  04FD  300F               	bsf	status, 5	;RP0=1, select bank1
  2400  04FE  1683               	bcf	status, 6	;RP1=0, select bank1
  2401  04FF  1303               	movwf	(134)^080h	;volatile
  2402  0500  0086               	line	109
  2403                           	
  2404                           l1272:	
  2405  0501                     ;keyboard.c: 109:     WPUB = 0x00;
  2406                           	clrf	(149)^080h	;volatile
  2407  0501  0195               	line	110
  2408                           	
  2409                           l1274:	
  2410  0502                     ;keyboard.c: 110:     OPTION_REGbits.nRBPU = 1;
  2411                           	bsf	(129)^080h,7	;volatile
  2412  0502  1781               	line	112
  2413                           	
  2414                           l1276:	
  2415  0503                     ;keyboard.c: 112:     prevKey = 0;
  2416                           	bcf	status, 5	;RP0=0, select bank0
  2417  0503  1283               	bcf	status, 6	;RP1=0, select bank0
  2418  0504  1303               	clrf	(_prevKey)
  2419  0505  01C4               	line	113
  2420                           	
  2421                           l1278:	
  2422  0506                     ;keyboard.c: 113:     currKey = 0;
  2423                           	clrf	(_currKey)
  2424  0506  01C3               	line	114
  2425                           	
  2426                           l180:	
  2427  0507                     	return
  2428  0507  0008               	opt stack 0
  2429                           GLOBAL	__end_of_keyboard_init
  2430                           	__end_of_keyboard_init:
  2431  0508                     	signat	_keyboard_init,89
  2432                           	global	_initEUSART
  2433                           
  2434 ;; *************** function _initEUSART *****************
  2435 ;; Defined at:
  2436 ;;		line 137 in file "eusart.c"
  2437 ;; Parameters:    Size  Location     Type
  2438 ;;  baudRate        4    0[COMMON] unsigned long 
  2439 ;; Auto vars:     Size  Location     Type
  2440 ;;		None
  2441 ;; Return value:  Size  Location     Type
  2442 ;;                  1    wreg      void 
  2443 ;; Registers used:
  2444 ;;		wreg
  2445 ;; Tracked objects:
  2446 ;;		On entry : 0/0
  2447 ;;		On exit  : 0/0
  2448 ;;		Unchanged: 0/0
  2449 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2450 ;;      Params:         4       0       0       0       0
  2451 ;;      Locals:         0       0       0       0       0
  2452 ;;      Temps:          0       0       0       0       0
  2453 ;;      Totals:         4       0       0       0       0
  2454 ;;Total ram usage:        4 bytes
  2455 ;; Hardware stack levels used:    1
  2456 ;; This function calls:
  2457 ;;		Nothing
  2458 ;; This function is called by:
  2459 ;;		_main
  2460 ;; This function uses a non-reentrant model
  2461 ;;
  2462                           psect	text5,local,class=CODE,delta=2,merge=1,group=0
  2463                           	file	"eusart.c"
  2464                           	line	137
  2465                           global __ptext5
  2466                           __ptext5:	;psect for function _initEUSART
  2467  0545                     psect	text5
  2468                           	file	"eusart.c"
  2469                           	line	137
  2470                           	global	__size_of_initEUSART
  2471                           	__size_of_initEUSART	equ	__end_of_initEUSART-_initEUSART
  2472  0017                     	
  2473                           _initEUSART:	
  2474  0545                     ;incstack = 0
  2475                           	opt	stack 7
  2476                           ; Regs used in _initEUSART: [wreg]
  2477                           	line	143
  2478                           	
  2479                           l1306:	
  2480  0545                     ;eusart.c: 137: void initEUSART( unsigned long baudRate );eusart.c: 138: {;eusart.c: 143
                                 :     SPBRbits.u16 = baudRate;
  2481                           	movf	(initEUSART@baudRate+1),w
  2482  0545  0871               	bsf	status, 5	;RP0=1, select bank1
  2483  0546  1683               	bcf	status, 6	;RP1=0, select bank1
  2484  0547  1303               	movwf	(153+1)^080h	;volatile
  2485  0548  009A               	movf	(initEUSART@baudRate),w
  2486  0549  0870               	movwf	(153)^080h	;volatile
  2487  054A  0099               	line	145
  2488                           	
  2489                           l1308:	
  2490  054B                     ;eusart.c: 145:     TXSTAbits.SYNC = 0;
  2491                           	bcf	(152)^080h,4	;volatile
  2492  054B  1218               	line	146
  2493                           	
  2494                           l1310:	
  2495  054C                     ;eusart.c: 146:     BAUDCTLbits.BRG16 = 1;
  2496                           	bsf	status, 5	;RP0=1, select bank3
  2497  054C  1683               	bsf	status, 6	;RP1=1, select bank3
  2498  054D  1703               	bsf	(391)^0180h,3	;volatile
  2499  054E  1587               	line	147
  2500                           	
  2501                           l1312:	
  2502  054F                     ;eusart.c: 147:     TXSTAbits.BRGH = 1;
  2503                           	bsf	status, 5	;RP0=1, select bank1
  2504  054F  1683               	bcf	status, 6	;RP1=0, select bank1
  2505  0550  1303               	bsf	(152)^080h,2	;volatile
  2506  0551  1518               	line	149
  2507                           	
  2508                           l1314:	
  2509  0552                     ;eusart.c: 149:     RCSTAbits.SPEN = 1;
  2510                           	bcf	status, 5	;RP0=0, select bank0
  2511  0552  1283               	bcf	status, 6	;RP1=0, select bank0
  2512  0553  1303               	bsf	(24),7	;volatile
  2513  0554  1798               	line	150
  2514                           	
  2515                           l1316:	
  2516  0555                     ;eusart.c: 150:     TXSTAbits.TXEN = 1;
  2517                           	bsf	status, 5	;RP0=1, select bank1
  2518  0555  1683               	bcf	status, 6	;RP1=0, select bank1
  2519  0556  1303               	bsf	(152)^080h,5	;volatile
  2520  0557  1698               	line	151
  2521                           	
  2522                           l1318:	
  2523  0558                     ;eusart.c: 151:     RCSTAbits.CREN = 1;
  2524                           	bcf	status, 5	;RP0=0, select bank0
  2525  0558  1283               	bcf	status, 6	;RP1=0, select bank0
  2526  0559  1303               	bsf	(24),4	;volatile
  2527  055A  1618               	line	153
  2528                           	
  2529                           l223:	
  2530  055B                     	return
  2531  055B  0008               	opt stack 0
  2532                           GLOBAL	__end_of_initEUSART
  2533                           	__end_of_initEUSART:
  2534  055C                     	signat	_initEUSART,4217
  2535                           	global	_dispLCDstr
  2536                           
  2537 ;; *************** function _dispLCDstr *****************
  2538 ;; Defined at:
  2539 ;;		line 184 in file "lcd.c"
  2540 ;; Parameters:    Size  Location     Type
  2541 ;;  str             1    6[COMMON] PTR const unsigned char 
  2542 ;;		 -> STR_1(18), 
  2543 ;; Auto vars:     Size  Location     Type
  2544 ;;		None
  2545 ;; Return value:  Size  Location     Type
  2546 ;;                  1    wreg      void 
  2547 ;; Registers used:
  2548 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2549 ;; Tracked objects:
  2550 ;;		On entry : 0/0
  2551 ;;		On exit  : 0/0
  2552 ;;		Unchanged: 0/0
  2553 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2554 ;;      Params:         1       0       0       0       0
  2555 ;;      Locals:         0       0       0       0       0
  2556 ;;      Temps:          1       0       0       0       0
  2557 ;;      Totals:         2       0       0       0       0
  2558 ;;Total ram usage:        2 bytes
  2559 ;; Hardware stack levels used:    1
  2560 ;; Hardware stack levels required when called:    2
  2561 ;; This function calls:
  2562 ;;		_dispLCD_dataReg
  2563 ;;		_dispLCD_lincol
  2564 ;; This function is called by:
  2565 ;;		_main
  2566 ;; This function uses a non-reentrant model
  2567 ;;
  2568                           psect	text6,local,class=CODE,delta=2,merge=1,group=0
  2569                           	file	"lcd.c"
  2570                           	line	184
  2571                           global __ptext6
  2572                           __ptext6:	;psect for function _dispLCDstr
  2573  062D                     psect	text6
  2574                           	file	"lcd.c"
  2575                           	line	184
  2576                           	global	__size_of_dispLCDstr
  2577                           	__size_of_dispLCDstr	equ	__end_of_dispLCDstr-_dispLCDstr
  2578  003B                     	
  2579                           _dispLCDstr:	
  2580  062D                     ;incstack = 0
  2581                           	opt	stack 5
  2582                           ; Regs used in _dispLCDstr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2583                           	line	186
  2584                           	
  2585                           l1256:	
  2586  062D                     ;lcd.c: 184: void dispLCDstr( const char * str );lcd.c: 185: {;lcd.c: 186:     dispLCD_l
                                 incol( 0, 0 );
  2587                           	clrf	(dispLCD_lincol@col)
  2588  062D  01F3               	movlw	low(0)
  2589  062E  3000               	fcall	_dispLCD_lincol
  2590  062F  120A  118A  2508  120A  118A  	line	188
  2591                           ;lcd.c: 188:     while( *str )
  2592                           	goto	l1266
  2593  0634  2E5A               	
  2594                           l116:	
  2595  0635                     	line	190
  2596                           	
  2597                           l1258:	
  2598  0635                     ;lcd.c: 189:     {;lcd.c: 190:         if( *str == '\n' )
  2599                           	movf	(dispLCDstr@str),w
  2600  0635  0876               	movwf	fsr0
  2601  0636  0084               	fcall	stringdir
  2602  0637  120A  118A  202B  120A  118A  	xorlw	0Ah
  2603  063C  3A0A               	skipz
  2604  063D  1D03               	goto	u531
  2605  063E  2E40               	goto	u530
  2606  063F  2E41               u531:
  2607  0640                     	goto	l1262
  2608  0640  2E49               u530:
  2609  0641                     	line	192
  2610                           	
  2611                           l1260:	
  2612  0641                     ;lcd.c: 191:         {;lcd.c: 192:             dispLCD_lincol(1,0);
  2613                           	clrf	(dispLCD_lincol@col)
  2614  0641  01F3               	movlw	low(01h)
  2615  0642  3001               	fcall	_dispLCD_lincol
  2616  0643  120A  118A  2508  120A  118A  	goto	l1262
  2617  0648  2E49               	line	193
  2618                           ;lcd.c: 193:         }
  2619                           	
  2620                           l117:	
  2621  0649                     	line	194
  2622                           	
  2623                           l1262:	
  2624  0649                     ;lcd.c: 194:         dispLCD_dataReg( *str );
  2625                           	movf	(dispLCDstr@str),w
  2626  0649  0876               	movwf	fsr0
  2627  064A  0084               	fcall	stringdir
  2628  064B  120A  118A  202B  120A  118A  	fcall	_dispLCD_dataReg
  2629  0650  120A  118A  2596  120A  118A  	line	195
  2630                           	
  2631                           l1264:	
  2632  0655                     ;lcd.c: 195:         ++str;
  2633                           	movlw	low(01h)
  2634  0655  3001               	movwf	(??_dispLCDstr+0)+0
  2635  0656  00F7               	movf	(??_dispLCDstr+0)+0,w
  2636  0657  0877               	addwf	(dispLCDstr@str),f
  2637  0658  07F6               	goto	l1266
  2638  0659  2E5A               	line	196
  2639                           ;lcd.c: 196:     }
  2640                           	
  2641                           l115:	
  2642  065A                     	line	188
  2643                           	
  2644                           l1266:	
  2645  065A                     ;lcd.c: 188:     while( *str )
  2646                           	movf	(dispLCDstr@str),w
  2647  065A  0876               	movwf	fsr0
  2648  065B  0084               	fcall	stringdir
  2649  065C  120A  118A  202B  120A  118A  	xorlw	0
  2650  0661  3A00               	skipz
  2651  0662  1D03               	goto	u541
  2652  0663  2E65               	goto	u540
  2653  0664  2E66               u541:
  2654  0665                     	goto	l1258
  2655  0665  2E35               u540:
  2656  0666                     	goto	l119
  2657  0666  2E67               	
  2658                           l118:	
  2659  0667                     	line	197
  2660                           	
  2661                           l119:	
  2662  0667                     	return
  2663  0667  0008               	opt stack 0
  2664                           GLOBAL	__end_of_dispLCDstr
  2665                           	__end_of_dispLCDstr:
  2666  0668                     	signat	_dispLCDstr,4217
  2667                           	global	_dispLCD_init
  2668                           
  2669 ;; *************** function _dispLCD_init *****************
  2670 ;; Defined at:
  2671 ;;		line 150 in file "lcd.c"
  2672 ;; Parameters:    Size  Location     Type
  2673 ;;		None
  2674 ;; Auto vars:     Size  Location     Type
  2675 ;;		None
  2676 ;; Return value:  Size  Location     Type
  2677 ;;                  1    wreg      void 
  2678 ;; Registers used:
  2679 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2680 ;; Tracked objects:
  2681 ;;		On entry : 0/0
  2682 ;;		On exit  : 0/0
  2683 ;;		Unchanged: 0/0
  2684 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2685 ;;      Params:         0       0       0       0       0
  2686 ;;      Locals:         0       0       0       0       0
  2687 ;;      Temps:          1       0       0       0       0
  2688 ;;      Totals:         1       0       0       0       0
  2689 ;;Total ram usage:        1 bytes
  2690 ;; Hardware stack levels used:    1
  2691 ;; Hardware stack levels required when called:    2
  2692 ;; This function calls:
  2693 ;;		_delay
  2694 ;;		_dispLCD_instReg
  2695 ;;		_dispLCD_newChar
  2696 ;; This function is called by:
  2697 ;;		_main
  2698 ;; This function uses a non-reentrant model
  2699 ;;
  2700                           psect	text7,local,class=CODE,delta=2,merge=1,group=0
  2701                           	line	150
  2702                           global __ptext7
  2703                           __ptext7:	;psect for function _dispLCD_init
  2704  0668                     psect	text7
  2705                           	file	"lcd.c"
  2706                           	line	150
  2707                           	global	__size_of_dispLCD_init
  2708                           	__size_of_dispLCD_init	equ	__end_of_dispLCD_init-_dispLCD_init
  2709  0054                     	
  2710                           _dispLCD_init:	
  2711  0668                     ;incstack = 0
  2712                           	opt	stack 5
  2713                           ; Regs used in _dispLCD_init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2714                           	line	152
  2715                           	
  2716                           l1224:	
  2717  0668                     ;lcd.c: 152:     delay(100);
  2718                           	movlw	064h
  2719  0668  3064               	movwf	(delay@t)
  2720  0669  00F0               	movlw	0
  2721  066A  3000               	movwf	((delay@t))+1
  2722  066B  00F1               	fcall	_delay
  2723  066C  120A  118A  252E  120A  118A  	line	153
  2724                           	
  2725                           l1226:	
  2726  0671                     ;lcd.c: 153:     TRISDbits.TRISD0 = 0;
  2727                           	bsf	status, 5	;RP0=1, select bank1
  2728  0671  1683               	bcf	status, 6	;RP1=0, select bank1
  2729  0672  1303               	bcf	(136)^080h,0	;volatile
  2730  0673  1008               	line	154
  2731                           	
  2732                           l1228:	
  2733  0674                     ;lcd.c: 154:     TRISDbits.TRISD1 = 0;
  2734                           	bcf	(136)^080h,1	;volatile
  2735  0674  1088               	line	155
  2736                           	
  2737                           l1230:	
  2738  0675                     ;lcd.c: 155:     TRISDbits.TRISD2 = 0;
  2739                           	bcf	(136)^080h,2	;volatile
  2740  0675  1108               	line	156
  2741                           	
  2742                           l1232:	
  2743  0676                     ;lcd.c: 156:     TRISDbits.TRISD3 = 0;
  2744                           	bcf	(136)^080h,3	;volatile
  2745  0676  1188               	line	157
  2746                           	
  2747                           l1234:	
  2748  0677                     ;lcd.c: 157:     TRISDbits.TRISD4 = 0;
  2749                           	bcf	(136)^080h,4	;volatile
  2750  0677  1208               	line	158
  2751                           	
  2752                           l1236:	
  2753  0678                     ;lcd.c: 158:     TRISDbits.TRISD5 = 0;
  2754                           	bcf	(136)^080h,5	;volatile
  2755  0678  1288               	line	159
  2756                           	
  2757                           l1238:	
  2758  0679                     ;lcd.c: 159:     TRISDbits.TRISD6 = 1;
  2759                           	bsf	(136)^080h,6	;volatile
  2760  0679  1708               	line	160
  2761                           	
  2762                           l1240:	
  2763  067A                     ;lcd.c: 160:     TRISDbits.TRISD7 = 1;
  2764                           	bsf	(136)^080h,7	;volatile
  2765  067A  1788               	line	161
  2766                           ;lcd.c: 161:     delay(100);
  2767                           	movlw	064h
  2768  067B  3064               	movwf	(delay@t)
  2769  067C  00F0               	movlw	0
  2770  067D  3000               	movwf	((delay@t))+1
  2771  067E  00F1               	fcall	_delay
  2772  067F  120A  118A  252E  120A  118A  	line	162
  2773                           	
  2774                           l1242:	
  2775  0684                     ;lcd.c: 162:     LCDbits.EN = 1;
  2776                           	bcf	status, 5	;RP0=0, select bank0
  2777  0684  1283               	bcf	status, 6	;RP1=0, select bank0
  2778  0685  1303               	bsf	(8),5	;volatile
  2779  0686  1688               	line	163
  2780                           ;lcd.c: 163:     dispLCD_instReg( 0x20|0x00|0x08);
  2781                           	movlw	low(028h)
  2782  0687  3028               	fcall	_dispLCD_instReg
  2783  0688  120A  118A  26BC  120A  118A  	line	164
  2784                           ;lcd.c: 164:     dispLCD_instReg( 0x08|0x04|0x00|0x00 );
  2785                           	movlw	low(0Ch)
  2786  068D  300C               	fcall	_dispLCD_instReg
  2787  068E  120A  118A  26BC  120A  118A  	line	165
  2788                           ;lcd.c: 165:     dispLCD_instReg( 0x01 );
  2789                           	movlw	low(01h)
  2790  0693  3001               	fcall	_dispLCD_instReg
  2791  0694  120A  118A  26BC  120A  118A  	line	166
  2792                           ;lcd.c: 166:     dispLCD_instReg( 0x02 );
  2793                           	movlw	low(02h)
  2794  0699  3002               	fcall	_dispLCD_instReg
  2795  069A  120A  118A  26BC  120A  118A  	line	167
  2796                           ;lcd.c: 167:     delay(100);
  2797                           	movlw	064h
  2798  069F  3064               	movwf	(delay@t)
  2799  06A0  00F0               	movlw	0
  2800  06A1  3000               	movwf	((delay@t))+1
  2801  06A2  00F1               	fcall	_delay
  2802  06A3  120A  118A  252E  120A  118A  	line	168
  2803                           	
  2804                           l1244:	
  2805  06A8                     ;lcd.c: 168:     dispLCD_newChar( 001, newChar_degree );
  2806                           	movlw	(low((((_newChar_degree)-__stringbase)|8000h)))&0ffh
  2807  06A8  3011               	movwf	(??_dispLCD_init+0)+0
  2808  06A9  00F7               	movf	(??_dispLCD_init+0)+0,w
  2809  06AA  0877               	movwf	(dispLCD_newChar@ptr)
  2810  06AB  00F3               	movlw	low(01h)
  2811  06AC  3001               	fcall	_dispLCD_newChar
  2812  06AD  120A  118A  25F3  120A  118A  	line	169
  2813                           	
  2814                           l1246:	
  2815  06B2                     ;lcd.c: 169:     delay(100);
  2816                           	movlw	064h
  2817  06B2  3064               	movwf	(delay@t)
  2818  06B3  00F0               	movlw	0
  2819  06B4  3000               	movwf	((delay@t))+1
  2820  06B5  00F1               	fcall	_delay
  2821  06B6  120A  118A  252E  120A  118A  	line	170
  2822                           	
  2823                           l106:	
  2824  06BB                     	return
  2825  06BB  0008               	opt stack 0
  2826                           GLOBAL	__end_of_dispLCD_init
  2827                           	__end_of_dispLCD_init:
  2828  06BC                     	signat	_dispLCD_init,89
  2829                           	global	_dispLCD_newChar
  2830                           
  2831 ;; *************** function _dispLCD_newChar *****************
  2832 ;; Defined at:
  2833 ;;		line 134 in file "lcd.c"
  2834 ;; Parameters:    Size  Location     Type
  2835 ;;  adrs            1    wreg     unsigned char 
  2836 ;;  ptr             1    3[COMMON] PTR const unsigned char 
  2837 ;;		 -> newChar_degree(8), 
  2838 ;; Auto vars:     Size  Location     Type
  2839 ;;  adrs            1    5[COMMON] unsigned char 
  2840 ;;  i               1    6[COMMON] unsigned char 
  2841 ;; Return value:  Size  Location     Type
  2842 ;;                  1    wreg      void 
  2843 ;; Registers used:
  2844 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2845 ;; Tracked objects:
  2846 ;;		On entry : 0/0
  2847 ;;		On exit  : 0/0
  2848 ;;		Unchanged: 0/0
  2849 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2850 ;;      Params:         1       0       0       0       0
  2851 ;;      Locals:         2       0       0       0       0
  2852 ;;      Temps:          1       0       0       0       0
  2853 ;;      Totals:         4       0       0       0       0
  2854 ;;Total ram usage:        4 bytes
  2855 ;; Hardware stack levels used:    1
  2856 ;; Hardware stack levels required when called:    1
  2857 ;; This function calls:
  2858 ;;		_dispLCD_dataReg
  2859 ;;		_dispLCD_instReg
  2860 ;; This function is called by:
  2861 ;;		_dispLCD_init
  2862 ;; This function uses a non-reentrant model
  2863 ;;
  2864                           psect	text8,local,class=CODE,delta=2,merge=1,group=0
  2865                           	line	134
  2866                           global __ptext8
  2867                           __ptext8:	;psect for function _dispLCD_newChar
  2868  05F3                     psect	text8
  2869                           	file	"lcd.c"
  2870                           	line	134
  2871                           	global	__size_of_dispLCD_newChar
  2872                           	__size_of_dispLCD_newChar	equ	__end_of_dispLCD_newChar-_dispLCD_newChar
  2873  003A                     	
  2874                           _dispLCD_newChar:	
  2875  05F3                     ;incstack = 0
  2876                           	opt	stack 5
  2877                           ; Regs used in _dispLCD_newChar: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2878                           ;dispLCD_newChar@adrs stored from wreg
  2879                           	movwf	(dispLCD_newChar@adrs)
  2880  05F3  00F5               	line	137
  2881                           	
  2882                           l1208:	
  2883  05F4                     ;lcd.c: 134: void dispLCD_newChar( unsigned char adrs, const char * ptr );lcd.c: 135: {;
                                 lcd.c: 136:     char i;;lcd.c: 137:     dispLCD_instReg( (0x40+(adrs<<3 & 0x3F)) );
  2884                           	movf	(dispLCD_newChar@adrs),w
  2885  05F4  0875               	movwf	(??_dispLCD_newChar+0)+0
  2886  05F5  00F4               	movlw	(03h)-1
  2887  05F6  3002               u495:
  2888  05F7                     	clrc
  2889  05F7  1003               	rlf	(??_dispLCD_newChar+0)+0,f
  2890  05F8  0DF4               	addlw	-1
  2891  05F9  3EFF               	skipz
  2892  05FA  1D03               	goto	u495
  2893  05FB  2DF7               	clrc
  2894  05FC  1003               	rlf	(??_dispLCD_newChar+0)+0,w
  2895  05FD  0D74               	andlw	03Fh
  2896  05FE  393F               	addlw	040h
  2897  05FF  3E40               	fcall	_dispLCD_instReg
  2898  0600  120A  118A  26BC  120A  118A  	line	138
  2899                           	
  2900                           l1210:	
  2901  0605                     ;lcd.c: 138:     for( i=0; i<8; i++ )
  2902                           	clrf	(dispLCD_newChar@i)
  2903  0605  01F6               	
  2904                           l1212:	
  2905  0606                     	movlw	low(08h)
  2906  0606  3008               	subwf	(dispLCD_newChar@i),w
  2907  0607  0276               	skipc
  2908  0608  1C03               	goto	u501
  2909  0609  2E0B               	goto	u500
  2910  060A  2E0C               u501:
  2911  060B                     	goto	l1216
  2912  060B  2E0E               u500:
  2913  060C                     	goto	l1222
  2914  060C  2E26               	
  2915                           l1214:	
  2916  060D                     	goto	l1222
  2917  060D  2E26               	
  2918                           l98:	
  2919  060E                     	line	139
  2920                           	
  2921                           l1216:	
  2922  060E                     ;lcd.c: 139:         dispLCD_dataReg( *(ptr+i) );
  2923                           	movf	(dispLCD_newChar@i),w
  2924  060E  0876               	addwf	(dispLCD_newChar@ptr),w
  2925  060F  0773               	movwf	fsr0
  2926  0610  0084               	fcall	stringdir
  2927  0611  120A  118A  202B  120A  118A  	fcall	_dispLCD_dataReg
  2928  0616  120A  118A  2596  120A  118A  	
  2929                           l1218:	
  2930  061B                     	movlw	low(01h)
  2931  061B  3001               	movwf	(??_dispLCD_newChar+0)+0
  2932  061C  00F4               	movf	(??_dispLCD_newChar+0)+0,w
  2933  061D  0874               	addwf	(dispLCD_newChar@i),f
  2934  061E  07F6               	
  2935                           l1220:	
  2936  061F                     	movlw	low(08h)
  2937  061F  3008               	subwf	(dispLCD_newChar@i),w
  2938  0620  0276               	skipc
  2939  0621  1C03               	goto	u511
  2940  0622  2E24               	goto	u510
  2941  0623  2E25               u511:
  2942  0624                     	goto	l1216
  2943  0624  2E0E               u510:
  2944  0625                     	goto	l1222
  2945  0625  2E26               	
  2946                           l99:	
  2947  0626                     	line	140
  2948                           	
  2949                           l1222:	
  2950  0626                     ;lcd.c: 140:     dispLCD_instReg(0x01);
  2951                           	movlw	low(01h)
  2952  0626  3001               	fcall	_dispLCD_instReg
  2953  0627  120A  118A  26BC  120A  118A  	line	141
  2954                           	
  2955                           l100:	
  2956  062C                     	return
  2957  062C  0008               	opt stack 0
  2958                           GLOBAL	__end_of_dispLCD_newChar
  2959                           	__end_of_dispLCD_newChar:
  2960  062D                     	signat	_dispLCD_newChar,8313
  2961                           	global	_delay
  2962                           
  2963 ;; *************** function _delay *****************
  2964 ;; Defined at:
  2965 ;;		line 12 in file "delay.c"
  2966 ;; Parameters:    Size  Location     Type
  2967 ;;  t               2    0[COMMON] unsigned int 
  2968 ;; Auto vars:     Size  Location     Type
  2969 ;;		None
  2970 ;; Return value:  Size  Location     Type
  2971 ;;                  1    wreg      void 
  2972 ;; Registers used:
  2973 ;;		wreg, status,2, status,0
  2974 ;; Tracked objects:
  2975 ;;		On entry : 0/0
  2976 ;;		On exit  : 0/0
  2977 ;;		Unchanged: 0/0
  2978 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2979 ;;      Params:         2       0       0       0       0
  2980 ;;      Locals:         0       0       0       0       0
  2981 ;;      Temps:          1       0       0       0       0
  2982 ;;      Totals:         3       0       0       0       0
  2983 ;;Total ram usage:        3 bytes
  2984 ;; Hardware stack levels used:    1
  2985 ;; This function calls:
  2986 ;;		Nothing
  2987 ;; This function is called by:
  2988 ;;		_dispLCD_init
  2989 ;; This function uses a non-reentrant model
  2990 ;;
  2991                           psect	text9,local,class=CODE,delta=2,merge=1,group=0
  2992                           	file	"delay.c"
  2993                           	line	12
  2994                           global __ptext9
  2995                           __ptext9:	;psect for function _delay
  2996  052E                     psect	text9
  2997                           	file	"delay.c"
  2998                           	line	12
  2999                           	global	__size_of_delay
  3000                           	__size_of_delay	equ	__end_of_delay-_delay
  3001  0017                     	
  3002                           _delay:	
  3003  052E                     ;incstack = 0
  3004                           	opt	stack 6
  3005                           ; Regs used in _delay: [wreg+status,2+status,0]
  3006                           	line	14
  3007                           	
  3008                           l1200:	
  3009  052E                     ;delay.c: 12: void delay( unsigned int t );delay.c: 13: {;delay.c: 14:     while( t )
  3010                           	goto	l1204
  3011  052E  2D3D               	
  3012                           l65:	
  3013  052F                     	line	16
  3014                           	
  3015                           l1202:	
  3016  052F                     ;delay.c: 15:     {;delay.c: 16:         _delay((unsigned long)((1)*(4000000/4000.0)));

  3017                           	opt asmopt_push
  3018                           opt asmopt_off
  3019                           	movlw	199
  3020  052F  30C7               movwf	((??_delay+0)+0),f
  3021  0530  00F2               	u757:
  3022  0531                     	nop2
  3023  0531  2D32               decfsz	(??_delay+0)+0,f
  3024  0532  0BF2               	goto	u757
  3025  0533  2D31               	nop2
  3026  0534  2D35               	nop2
  3027  0535  2D36               opt asmopt_pop
  3028                           
  3029                           	line	17
  3030                           ;delay.c: 17:         --t;
  3031                           	movlw	01h
  3032  0536  3001               	subwf	(delay@t),f
  3033  0537  02F0               	movlw	0
  3034  0538  3000               	skipc
  3035  0539  1C03               	decf	(delay@t+1),f
  3036  053A  03F1               	subwf	(delay@t+1),f
  3037  053B  02F1               	goto	l1204
  3038  053C  2D3D               	line	18
  3039                           ;delay.c: 18:     }
  3040                           	
  3041                           l64:	
  3042  053D                     	line	14
  3043                           	
  3044                           l1204:	
  3045  053D                     ;delay.c: 14:     while( t )
  3046                           	movf	((delay@t)),w
  3047  053D  0870               iorwf	((delay@t+1)),w
  3048  053E  0471               	btfss	status,2
  3049  053F  1D03               	goto	u471
  3050  0540  2D42               	goto	u470
  3051  0541  2D43               u471:
  3052  0542                     	goto	l1202
  3053  0542  2D2F               u470:
  3054  0543                     	goto	l67
  3055  0543  2D44               	
  3056                           l66:	
  3057  0544                     	line	19
  3058                           	
  3059                           l67:	
  3060  0544                     	return
  3061  0544  0008               	opt stack 0
  3062                           GLOBAL	__end_of_delay
  3063                           	__end_of_delay:
  3064  0545                     	signat	_delay,4217
  3065                           	global	_dispLCD
  3066                           
  3067 ;; *************** function _dispLCD *****************
  3068 ;; Defined at:
  3069 ;;		line 173 in file "lcd.c"
  3070 ;; Parameters:    Size  Location     Type
  3071 ;;  lin             1    6[COMMON] unsigned char 
  3072 ;;  col             1    7[COMMON] unsigned char 
  3073 ;;  str             2    8[COMMON] PTR const unsigned char 
  3074 ;;		 -> vetor(17), STR_3(14), STR_2(14), 
  3075 ;; Auto vars:     Size  Location     Type
  3076 ;;		None
  3077 ;; Return value:  Size  Location     Type
  3078 ;;                  1    wreg      void 
  3079 ;; Registers used:
  3080 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3081 ;; Tracked objects:
  3082 ;;		On entry : 0/0
  3083 ;;		On exit  : 0/0
  3084 ;;		Unchanged: 0/0
  3085 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3086 ;;      Params:         4       0       0       0       0
  3087 ;;      Locals:         0       0       0       0       0
  3088 ;;      Temps:          1       0       0       0       0
  3089 ;;      Totals:         5       0       0       0       0
  3090 ;;Total ram usage:        5 bytes
  3091 ;; Hardware stack levels used:    1
  3092 ;; Hardware stack levels required when called:    2
  3093 ;; This function calls:
  3094 ;;		_dispLCD_dataReg
  3095 ;;		_dispLCD_lincol
  3096 ;; This function is called by:
  3097 ;;		_main
  3098 ;; This function uses a non-reentrant model
  3099 ;;
  3100                           psect	text10,local,class=CODE,delta=2,merge=1,group=0
  3101                           	file	"lcd.c"
  3102                           	line	173
  3103                           global __ptext10
  3104                           __ptext10:	;psect for function _dispLCD
  3105  05C1                     psect	text10
  3106                           	file	"lcd.c"
  3107                           	line	173
  3108                           	global	__size_of_dispLCD
  3109                           	__size_of_dispLCD	equ	__end_of_dispLCD-_dispLCD
  3110  0032                     	
  3111                           _dispLCD:	
  3112  05C1                     ;incstack = 0
  3113                           	opt	stack 5
  3114                           ; Regs used in _dispLCD: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3115                           	line	175
  3116                           	
  3117                           l1248:	
  3118  05C1                     ;lcd.c: 173: void dispLCD( unsigned char lin, unsigned char col, const char * str );lcd.
                                 c: 174: {;lcd.c: 175:     dispLCD_lincol( lin, col );
  3119                           	movf	(dispLCD@col),w
  3120  05C1  0877               	movwf	(??_dispLCD+0)+0
  3121  05C2  00FA               	movf	(??_dispLCD+0)+0,w
  3122  05C3  087A               	movwf	(dispLCD_lincol@col)
  3123  05C4  00F3               	movf	(dispLCD@lin),w
  3124  05C5  0876               	fcall	_dispLCD_lincol
  3125  05C6  120A  118A  2508  120A  118A  	line	177
  3126                           ;lcd.c: 177:     while( *str )
  3127                           	goto	l1254
  3128  05CB  2DE1               	
  3129                           l110:	
  3130  05CC                     	line	179
  3131                           	
  3132                           l1250:	
  3133  05CC                     ;lcd.c: 178:     {;lcd.c: 179:         dispLCD_dataReg( *str );
  3134                           	movf	(dispLCD@str+1),w
  3135  05CC  0879               	bcf	status, 5	;RP0=0, select bank0
  3136  05CD  1283               	bcf	status, 6	;RP1=0, select bank0
  3137  05CE  1303               	movwf	btemp+1
  3138  05CF  00FF               	movf	(dispLCD@str),w
  3139  05D0  0878               	movwf	fsr0
  3140  05D1  0084               	fcall	stringtab
  3141  05D2  120A  118A  2021  120A  118A  	fcall	_dispLCD_dataReg
  3142  05D7  120A  118A  2596  120A  118A  	line	180
  3143                           	
  3144                           l1252:	
  3145  05DC                     ;lcd.c: 180:         ++str;
  3146                           	movlw	01h
  3147  05DC  3001               	addwf	(dispLCD@str),f
  3148  05DD  07F8               	skipnc
  3149  05DE  1803               	incf	(dispLCD@str+1),f
  3150  05DF  0AF9               	goto	l1254
  3151  05E0  2DE1               	line	181
  3152                           ;lcd.c: 181:     }
  3153                           	
  3154                           l109:	
  3155  05E1                     	line	177
  3156                           	
  3157                           l1254:	
  3158  05E1                     ;lcd.c: 177:     while( *str )
  3159                           	movf	(dispLCD@str+1),w
  3160  05E1  0879               	bcf	status, 5	;RP0=0, select bank0
  3161  05E2  1283               	bcf	status, 6	;RP1=0, select bank0
  3162  05E3  1303               	movwf	btemp+1
  3163  05E4  00FF               	movf	(dispLCD@str),w
  3164  05E5  0878               	movwf	fsr0
  3165  05E6  0084               	fcall	stringtab
  3166  05E7  120A  118A  2021  120A  118A  	xorlw	0
  3167  05EC  3A00               	skipz
  3168  05ED  1D03               	goto	u521
  3169  05EE  2DF0               	goto	u520
  3170  05EF  2DF1               u521:
  3171  05F0                     	goto	l1250
  3172  05F0  2DCC               u520:
  3173  05F1                     	goto	l112
  3174  05F1  2DF2               	
  3175                           l111:	
  3176  05F2                     	line	182
  3177                           	
  3178                           l112:	
  3179  05F2                     	return
  3180  05F2  0008               	opt stack 0
  3181                           GLOBAL	__end_of_dispLCD
  3182                           	__end_of_dispLCD:
  3183  05F3                     	signat	_dispLCD,12409
  3184                           	global	_dispLCD_lincol
  3185                           
  3186 ;; *************** function _dispLCD_lincol *****************
  3187 ;; Defined at:
  3188 ;;		line 128 in file "lcd.c"
  3189 ;; Parameters:    Size  Location     Type
  3190 ;;  lin             1    wreg     unsigned char 
  3191 ;;  col             1    3[COMMON] unsigned char 
  3192 ;; Auto vars:     Size  Location     Type
  3193 ;;  lin             1    5[COMMON] unsigned char 
  3194 ;; Return value:  Size  Location     Type
  3195 ;;                  1    wreg      void 
  3196 ;; Registers used:
  3197 ;;		wreg, status,2, status,0, pclath, cstack
  3198 ;; Tracked objects:
  3199 ;;		On entry : 0/0
  3200 ;;		On exit  : 0/0
  3201 ;;		Unchanged: 0/0
  3202 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3203 ;;      Params:         1       0       0       0       0
  3204 ;;      Locals:         1       0       0       0       0
  3205 ;;      Temps:          1       0       0       0       0
  3206 ;;      Totals:         3       0       0       0       0
  3207 ;;Total ram usage:        3 bytes
  3208 ;; Hardware stack levels used:    1
  3209 ;; Hardware stack levels required when called:    1
  3210 ;; This function calls:
  3211 ;;		_dispLCD_instReg
  3212 ;; This function is called by:
  3213 ;;		_dispLCD
  3214 ;;		_dispLCDstr
  3215 ;;		_dispLCD_putChar
  3216 ;;		_dispLCD_num
  3217 ;; This function uses a non-reentrant model
  3218 ;;
  3219                           psect	text11,local,class=CODE,delta=2,merge=1,group=0
  3220                           	line	128
  3221                           global __ptext11
  3222                           __ptext11:	;psect for function _dispLCD_lincol
  3223  0508                     psect	text11
  3224                           	file	"lcd.c"
  3225                           	line	128
  3226                           	global	__size_of_dispLCD_lincol
  3227                           	__size_of_dispLCD_lincol	equ	__end_of_dispLCD_lincol-_dispLCD_lincol
  3228  0013                     	
  3229                           _dispLCD_lincol:	
  3230  0508                     ;incstack = 0
  3231                           	opt	stack 5
  3232                           ; Regs used in _dispLCD_lincol: [wreg+status,2+status,0+pclath+cstack]
  3233                           ;dispLCD_lincol@lin stored from wreg
  3234                           	movwf	(dispLCD_lincol@lin)
  3235  0508  00F5               	line	130
  3236                           	
  3237                           l1206:	
  3238  0509                     ;lcd.c: 128: void dispLCD_lincol( unsigned char lin, unsigned char col);lcd.c: 129: {;lc
                                 d.c: 130:     dispLCD_instReg( (0x80+((0x40 * lin) + (col + 0x00) & 0x7F)) );
  3239                           	movf	(dispLCD_lincol@lin),w
  3240  0509  0875               	movwf	(??_dispLCD_lincol+0)+0
  3241  050A  00F4               	movlw	06h
  3242  050B  3006               u485:
  3243  050C                     	clrc
  3244  050C  1003               	rlf	(??_dispLCD_lincol+0)+0,f
  3245  050D  0DF4               	addlw	-1
  3246  050E  3EFF               	skipz
  3247  050F  1D03               	goto	u485
  3248  0510  2D0C               	movf	(dispLCD_lincol@col),w
  3249  0511  0873               	addwf	0+(??_dispLCD_lincol+0)+0,w
  3250  0512  0774               	andlw	07Fh
  3251  0513  397F               	addlw	080h
  3252  0514  3E80               	fcall	_dispLCD_instReg
  3253  0515  120A  118A  26BC  120A  118A  	line	131
  3254                           	
  3255                           l95:	
  3256  051A                     	return
  3257  051A  0008               	opt stack 0
  3258                           GLOBAL	__end_of_dispLCD_lincol
  3259                           	__end_of_dispLCD_lincol:
  3260  051B                     	signat	_dispLCD_lincol,8313
  3261                           	global	_dispLCD_instReg
  3262                           
  3263 ;; *************** function _dispLCD_instReg *****************
  3264 ;; Defined at:
  3265 ;;		line 79 in file "lcd.c"
  3266 ;; Parameters:    Size  Location     Type
  3267 ;;  i               1    wreg     unsigned char 
  3268 ;; Auto vars:     Size  Location     Type
  3269 ;;  i               1    2[COMMON] unsigned char 
  3270 ;; Return value:  Size  Location     Type
  3271 ;;                  1    wreg      void 
  3272 ;; Registers used:
  3273 ;;		wreg, status,2, status,0
  3274 ;; Tracked objects:
  3275 ;;		On entry : 0/0
  3276 ;;		On exit  : 0/0
  3277 ;;		Unchanged: 0/0
  3278 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3279 ;;      Params:         0       0       0       0       0
  3280 ;;      Locals:         1       0       0       0       0
  3281 ;;      Temps:          2       0       0       0       0
  3282 ;;      Totals:         3       0       0       0       0
  3283 ;;Total ram usage:        3 bytes
  3284 ;; Hardware stack levels used:    1
  3285 ;; This function calls:
  3286 ;;		Nothing
  3287 ;; This function is called by:
  3288 ;;		_dispLCD_lincol
  3289 ;;		_dispLCD_newChar
  3290 ;;		_dispLCD_init
  3291 ;;		_dispLCD_clr
  3292 ;; This function uses a non-reentrant model
  3293 ;;
  3294                           psect	text12,local,class=CODE,delta=2,merge=1,group=0
  3295                           	line	79
  3296                           global __ptext12
  3297                           __ptext12:	;psect for function _dispLCD_instReg
  3298  06BC                     psect	text12
  3299                           	file	"lcd.c"
  3300                           	line	79
  3301                           	global	__size_of_dispLCD_instReg
  3302                           	__size_of_dispLCD_instReg	equ	__end_of_dispLCD_instReg-_dispLCD_instReg
  3303  0079                     	
  3304                           _dispLCD_instReg:	
  3305  06BC                     ;incstack = 0
  3306                           	opt	stack 5
  3307                           ; Regs used in _dispLCD_instReg: [wreg+status,2+status,0]
  3308                           ;dispLCD_instReg@i stored from wreg
  3309                           	movwf	(dispLCD_instReg@i)
  3310  06BC  00F2               	line	81
  3311                           	
  3312                           l1140:	
  3313  06BD                     ;lcd.c: 79: void dispLCD_instReg( unsigned char i );lcd.c: 80: {;lcd.c: 81:     LCDbits.
                                 RS = 0;
  3314                           	bcf	status, 5	;RP0=0, select bank0
  3315  06BD  1283               	bcf	status, 6	;RP1=0, select bank0
  3316  06BE  1303               	bcf	(8),4	;volatile
  3317  06BF  1208               	line	82
  3318                           	
  3319                           l1142:	
  3320  06C0                     ;lcd.c: 82:     LCDbits.BUS = (i>>4);
  3321                           	movf	(dispLCD_instReg@i),w
  3322  06C0  0872               	movwf	(??_dispLCD_instReg+0)+0
  3323  06C1  00F0               	movlw	04h
  3324  06C2  3004               u395:
  3325  06C3                     	clrc
  3326  06C3  1003               	rrf	(??_dispLCD_instReg+0)+0,f
  3327  06C4  0CF0               	addlw	-1
  3328  06C5  3EFF               	skipz
  3329  06C6  1D03               	goto	u395
  3330  06C7  2EC3               	movf	(8),w	;volatile
  3331  06C8  0808               	xorwf	0+(??_dispLCD_instReg+0)+0,w
  3332  06C9  0670               	andlw	not ((1<<4)-1)
  3333  06CA  39F0               	xorwf	0+(??_dispLCD_instReg+0)+0,w
  3334  06CB  0670               	movwf	(8)	;volatile
  3335  06CC  0088               	line	84
  3336                           	
  3337                           l1144:	
  3338  06CD                     ;lcd.c: 84:     LCDbits.EN = 0;
  3339                           	bcf	(8),5	;volatile
  3340  06CD  1288               	line	85
  3341                           ;lcd.c: 85:     if( i == 0x01 || i == 0x02 )
  3342                           		decf	((dispLCD_instReg@i)),w
  3343  06CE  0372               	btfsc	status,2
  3344  06CF  1903               	goto	u401
  3345  06D0  2ED2               	goto	u400
  3346  06D1  2ED3               u401:
  3347  06D2                     	goto	l1148
  3348  06D2  2EDA               u400:
  3349  06D3                     	
  3350                           l1146:	
  3351  06D3                     		movlw	2
  3352  06D3  3002               	xorwf	((dispLCD_instReg@i)),w
  3353  06D4  0672               	btfss	status,2
  3354  06D5  1D03               	goto	u411
  3355  06D6  2ED8               	goto	u410
  3356  06D7  2ED9               u411:
  3357  06D8                     	goto	l1150
  3358  06D8  2EE4               u410:
  3359  06D9                     	goto	l1148
  3360  06D9  2EDA               	
  3361                           l82:	
  3362  06DA                     	line	86
  3363                           	
  3364                           l1148:	
  3365  06DA                     ;lcd.c: 86:         _delay((unsigned long)((2)*(4000000/4000.0)));
  3366                           	opt asmopt_push
  3367                           opt asmopt_off
  3368                           movlw	3
  3369  06DA  3003               movwf	((??_dispLCD_instReg+0)+0+1),f
  3370  06DB  00F1               	movlw	151
  3371  06DC  3097               movwf	((??_dispLCD_instReg+0)+0),f
  3372  06DD  00F0               	u767:
  3373  06DE                     decfsz	((??_dispLCD_instReg+0)+0),f
  3374  06DE  0BF0               	goto	u767
  3375  06DF  2EDE               	decfsz	((??_dispLCD_instReg+0)+0+1),f
  3376  06E0  0BF1               	goto	u767
  3377  06E1  2EDE               	nop2
  3378  06E2  2EE3               opt asmopt_pop
  3379                           
  3380                           	goto	l1152
  3381  06E3  2EE9               	line	87
  3382                           ;lcd.c: 87:     else
  3383                           	
  3384                           l80:	
  3385  06E4                     	line	88
  3386                           	
  3387                           l1150:	
  3388  06E4                     ;lcd.c: 88:         _delay((unsigned long)((40)*(4000000/4000000.0)));
  3389                           	opt asmopt_push
  3390                           opt asmopt_off
  3391                           	movlw	13
  3392  06E4  300D               movwf	((??_dispLCD_instReg+0)+0),f
  3393  06E5  00F0               	u777:
  3394  06E6                     decfsz	(??_dispLCD_instReg+0)+0,f
  3395  06E6  0BF0               	goto	u777
  3396  06E7  2EE6               opt asmopt_pop
  3397                           
  3398                           	goto	l1152
  3399  06E8  2EE9               	
  3400                           l83:	
  3401  06E9                     	line	89
  3402                           	
  3403                           l1152:	
  3404  06E9                     ;lcd.c: 89:     LCDbits.EN = 1;
  3405                           	bcf	status, 5	;RP0=0, select bank0
  3406  06E9  1283               	bcf	status, 6	;RP1=0, select bank0
  3407  06EA  1303               	bsf	(8),5	;volatile
  3408  06EB  1688               	line	92
  3409                           	
  3410                           l1154:	
  3411  06EC                     ;lcd.c: 92:     if( (i & 0xF0) == (0x20 | 0x00) )
  3412                           	movlw	low(0F0h)
  3413  06EC  30F0               	andwf	(dispLCD_instReg@i),w
  3414  06ED  0572               	movwf	(??_dispLCD_instReg+0)+0
  3415  06EE  00F0               		movlw	32
  3416  06EF  3020               	xorwf	((??_dispLCD_instReg+0)+0),w
  3417  06F0  0670               	btfss	status,2
  3418  06F1  1D03               	goto	u421
  3419  06F2  2EF4               	goto	u420
  3420  06F3  2EF5               u421:
  3421  06F4                     	goto	l1166
  3422  06F4  2F0C               u420:
  3423  06F5                     	line	94
  3424                           	
  3425                           l1156:	
  3426  06F5                     ;lcd.c: 93:     {;lcd.c: 94:         LCDbits.RS = 0;
  3427                           	bcf	(8),4	;volatile
  3428  06F5  1208               	line	95
  3429                           	
  3430                           l1158:	
  3431  06F6                     ;lcd.c: 95:         LCDbits.BUS = i>>4;
  3432                           	movf	(dispLCD_instReg@i),w
  3433  06F6  0872               	movwf	(??_dispLCD_instReg+0)+0
  3434  06F7  00F0               	movlw	04h
  3435  06F8  3004               u435:
  3436  06F9                     	clrc
  3437  06F9  1003               	rrf	(??_dispLCD_instReg+0)+0,f
  3438  06FA  0CF0               	addlw	-1
  3439  06FB  3EFF               	skipz
  3440  06FC  1D03               	goto	u435
  3441  06FD  2EF9               	movf	(8),w	;volatile
  3442  06FE  0808               	xorwf	0+(??_dispLCD_instReg+0)+0,w
  3443  06FF  0670               	andlw	not ((1<<4)-1)
  3444  0700  39F0               	xorwf	0+(??_dispLCD_instReg+0)+0,w
  3445  0701  0670               	movwf	(8)	;volatile
  3446  0702  0088               	line	96
  3447                           	
  3448                           l1160:	
  3449  0703                     ;lcd.c: 96:         LCDbits.EN = 0;
  3450                           	bcf	(8),5	;volatile
  3451  0703  1288               	line	97
  3452                           	
  3453                           l1162:	
  3454  0704                     ;lcd.c: 97:         _delay((unsigned long)((40)*(4000000/4000000.0)));
  3455                           	opt asmopt_push
  3456                           opt asmopt_off
  3457                           	movlw	13
  3458  0704  300D               movwf	((??_dispLCD_instReg+0)+0),f
  3459  0705  00F0               	u787:
  3460  0706                     decfsz	(??_dispLCD_instReg+0)+0,f
  3461  0706  0BF0               	goto	u787
  3462  0707  2F06               opt asmopt_pop
  3463                           
  3464                           	line	98
  3465                           	
  3466                           l1164:	
  3467  0708                     ;lcd.c: 98:         LCDbits.EN = 1;
  3468                           	bcf	status, 5	;RP0=0, select bank0
  3469  0708  1283               	bcf	status, 6	;RP1=0, select bank0
  3470  0709  1303               	bsf	(8),5	;volatile
  3471  070A  1688               	goto	l1166
  3472  070B  2F0C               	line	99
  3473                           ;lcd.c: 99:     }
  3474                           	
  3475                           l84:	
  3476  070C                     	line	101
  3477                           	
  3478                           l1166:	
  3479  070C                     ;lcd.c: 101:     LCDbits.RS = 0;
  3480                           	bcf	(8),4	;volatile
  3481  070C  1208               	line	102
  3482                           	
  3483                           l1168:	
  3484  070D                     ;lcd.c: 102:     LCDbits.BUS = i & 0x0F;
  3485                           	movlw	low(0Fh)
  3486  070D  300F               	andwf	(dispLCD_instReg@i),w
  3487  070E  0572               	movwf	(??_dispLCD_instReg+0)+0
  3488  070F  00F0               	movf	(8),w	;volatile
  3489  0710  0808               	xorwf	0+(??_dispLCD_instReg+0)+0,w
  3490  0711  0670               	andlw	not ((1<<4)-1)
  3491  0712  39F0               	xorwf	0+(??_dispLCD_instReg+0)+0,w
  3492  0713  0670               	movwf	(8)	;volatile
  3493  0714  0088               	line	103
  3494                           	
  3495                           l1170:	
  3496  0715                     ;lcd.c: 103:     LCDbits.EN = 0;
  3497                           	bcf	(8),5	;volatile
  3498  0715  1288               	line	104
  3499                           	
  3500                           l1172:	
  3501  0716                     ;lcd.c: 104:     if( i == 0x01 || i == 0x02 )
  3502                           		decf	((dispLCD_instReg@i)),w
  3503  0716  0372               	btfsc	status,2
  3504  0717  1903               	goto	u441
  3505  0718  2F1A               	goto	u440
  3506  0719  2F1B               u441:
  3507  071A                     	goto	l1176
  3508  071A  2F22               u440:
  3509  071B                     	
  3510                           l1174:	
  3511  071B                     		movlw	2
  3512  071B  3002               	xorwf	((dispLCD_instReg@i)),w
  3513  071C  0672               	btfss	status,2
  3514  071D  1D03               	goto	u451
  3515  071E  2F20               	goto	u450
  3516  071F  2F21               u451:
  3517  0720                     	goto	l1178
  3518  0720  2F2C               u450:
  3519  0721                     	goto	l1176
  3520  0721  2F22               	
  3521                           l87:	
  3522  0722                     	line	105
  3523                           	
  3524                           l1176:	
  3525  0722                     ;lcd.c: 105:         _delay((unsigned long)((2)*(4000000/4000.0)));
  3526                           	opt asmopt_push
  3527                           opt asmopt_off
  3528                           movlw	3
  3529  0722  3003               movwf	((??_dispLCD_instReg+0)+0+1),f
  3530  0723  00F1               	movlw	151
  3531  0724  3097               movwf	((??_dispLCD_instReg+0)+0),f
  3532  0725  00F0               	u797:
  3533  0726                     decfsz	((??_dispLCD_instReg+0)+0),f
  3534  0726  0BF0               	goto	u797
  3535  0727  2F26               	decfsz	((??_dispLCD_instReg+0)+0+1),f
  3536  0728  0BF1               	goto	u797
  3537  0729  2F26               	nop2
  3538  072A  2F2B               opt asmopt_pop
  3539                           
  3540                           	goto	l1180
  3541  072B  2F31               	line	106
  3542                           ;lcd.c: 106:     else
  3543                           	
  3544                           l85:	
  3545  072C                     	line	107
  3546                           	
  3547                           l1178:	
  3548  072C                     ;lcd.c: 107:         _delay((unsigned long)((40)*(4000000/4000000.0)));
  3549                           	opt asmopt_push
  3550                           opt asmopt_off
  3551                           	movlw	13
  3552  072C  300D               movwf	((??_dispLCD_instReg+0)+0),f
  3553  072D  00F0               	u807:
  3554  072E                     decfsz	(??_dispLCD_instReg+0)+0,f
  3555  072E  0BF0               	goto	u807
  3556  072F  2F2E               opt asmopt_pop
  3557                           
  3558                           	goto	l1180
  3559  0730  2F31               	
  3560                           l88:	
  3561  0731                     	line	108
  3562                           	
  3563                           l1180:	
  3564  0731                     ;lcd.c: 108:     LCDbits.EN = 1;
  3565                           	bcf	status, 5	;RP0=0, select bank0
  3566  0731  1283               	bcf	status, 6	;RP1=0, select bank0
  3567  0732  1303               	bsf	(8),5	;volatile
  3568  0733  1688               	line	109
  3569                           	
  3570                           l89:	
  3571  0734                     	return
  3572  0734  0008               	opt stack 0
  3573                           GLOBAL	__end_of_dispLCD_instReg
  3574                           	__end_of_dispLCD_instReg:
  3575  0735                     	signat	_dispLCD_instReg,4217
  3576                           	global	_dispLCD_dataReg
  3577                           
  3578 ;; *************** function _dispLCD_dataReg *****************
  3579 ;; Defined at:
  3580 ;;		line 112 in file "lcd.c"
  3581 ;; Parameters:    Size  Location     Type
  3582 ;;  d               1    wreg     unsigned char 
  3583 ;; Auto vars:     Size  Location     Type
  3584 ;;  d               1    1[COMMON] unsigned char 
  3585 ;; Return value:  Size  Location     Type
  3586 ;;                  1    wreg      void 
  3587 ;; Registers used:
  3588 ;;		wreg, status,2, status,0
  3589 ;; Tracked objects:
  3590 ;;		On entry : 0/0
  3591 ;;		On exit  : 0/0
  3592 ;;		Unchanged: 0/0
  3593 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3594 ;;      Params:         0       0       0       0       0
  3595 ;;      Locals:         1       0       0       0       0
  3596 ;;      Temps:          1       0       0       0       0
  3597 ;;      Totals:         2       0       0       0       0
  3598 ;;Total ram usage:        2 bytes
  3599 ;; Hardware stack levels used:    1
  3600 ;; This function calls:
  3601 ;;		Nothing
  3602 ;; This function is called by:
  3603 ;;		_dispLCD_newChar
  3604 ;;		_dispLCD
  3605 ;;		_dispLCDstr
  3606 ;;		_dispLCD_putChar
  3607 ;;		_dispLCD_num
  3608 ;; This function uses a non-reentrant model
  3609 ;;
  3610                           psect	text13,local,class=CODE,delta=2,merge=1,group=0
  3611                           	line	112
  3612                           global __ptext13
  3613                           __ptext13:	;psect for function _dispLCD_dataReg
  3614  0596                     psect	text13
  3615                           	file	"lcd.c"
  3616                           	line	112
  3617                           	global	__size_of_dispLCD_dataReg
  3618                           	__size_of_dispLCD_dataReg	equ	__end_of_dispLCD_dataReg-_dispLCD_dataReg
  3619  002B                     	
  3620                           _dispLCD_dataReg:	
  3621  0596                     ;incstack = 0
  3622                           	opt	stack 6
  3623                           ; Regs used in _dispLCD_dataReg: [wreg+status,2+status,0]
  3624                           ;dispLCD_dataReg@d stored from wreg
  3625                           	movwf	(dispLCD_dataReg@d)
  3626  0596  00F1               	line	114
  3627                           	
  3628                           l1182:	
  3629  0597                     ;lcd.c: 112:  void dispLCD_dataReg( unsigned char d );lcd.c: 113: {;lcd.c: 114:     LCDb
                                 its.RS = 1;
  3630                           	bcf	status, 5	;RP0=0, select bank0
  3631  0597  1283               	bcf	status, 6	;RP1=0, select bank0
  3632  0598  1303               	bsf	(8),4	;volatile
  3633  0599  1608               	line	115
  3634                           	
  3635                           l1184:	
  3636  059A                     ;lcd.c: 115:     LCDbits.BUS = d >> 4;
  3637                           	movf	(dispLCD_dataReg@d),w
  3638  059A  0871               	movwf	(??_dispLCD_dataReg+0)+0
  3639  059B  00F0               	movlw	04h
  3640  059C  3004               u465:
  3641  059D                     	clrc
  3642  059D  1003               	rrf	(??_dispLCD_dataReg+0)+0,f
  3643  059E  0CF0               	addlw	-1
  3644  059F  3EFF               	skipz
  3645  05A0  1D03               	goto	u465
  3646  05A1  2D9D               	movf	(8),w	;volatile
  3647  05A2  0808               	xorwf	0+(??_dispLCD_dataReg+0)+0,w
  3648  05A3  0670               	andlw	not ((1<<4)-1)
  3649  05A4  39F0               	xorwf	0+(??_dispLCD_dataReg+0)+0,w
  3650  05A5  0670               	movwf	(8)	;volatile
  3651  05A6  0088               	line	116
  3652                           	
  3653                           l1186:	
  3654  05A7                     ;lcd.c: 116:     LCDbits.EN = 0;
  3655                           	bcf	(8),5	;volatile
  3656  05A7  1288               	line	117
  3657                           	
  3658                           l1188:	
  3659  05A8                     ;lcd.c: 117:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  3660                           	opt asmopt_push
  3661                           opt asmopt_off
  3662                           	movlw	13
  3663  05A8  300D               movwf	((??_dispLCD_dataReg+0)+0),f
  3664  05A9  00F0               	u817:
  3665  05AA                     decfsz	(??_dispLCD_dataReg+0)+0,f
  3666  05AA  0BF0               	goto	u817
  3667  05AB  2DAA               opt asmopt_pop
  3668                           
  3669                           	line	118
  3670                           	
  3671                           l1190:	
  3672  05AC                     ;lcd.c: 118:     LCDbits.EN = 1;
  3673                           	bcf	status, 5	;RP0=0, select bank0
  3674  05AC  1283               	bcf	status, 6	;RP1=0, select bank0
  3675  05AD  1303               	bsf	(8),5	;volatile
  3676  05AE  1688               	line	120
  3677                           	
  3678                           l1192:	
  3679  05AF                     ;lcd.c: 120:     LCDbits.RS = 1;
  3680                           	bsf	(8),4	;volatile
  3681  05AF  1608               	line	121
  3682                           	
  3683                           l1194:	
  3684  05B0                     ;lcd.c: 121:     LCDbits.BUS = d & 0x0F;
  3685                           	movlw	low(0Fh)
  3686  05B0  300F               	andwf	(dispLCD_dataReg@d),w
  3687  05B1  0571               	movwf	(??_dispLCD_dataReg+0)+0
  3688  05B2  00F0               	movf	(8),w	;volatile
  3689  05B3  0808               	xorwf	0+(??_dispLCD_dataReg+0)+0,w
  3690  05B4  0670               	andlw	not ((1<<4)-1)
  3691  05B5  39F0               	xorwf	0+(??_dispLCD_dataReg+0)+0,w
  3692  05B6  0670               	movwf	(8)	;volatile
  3693  05B7  0088               	line	122
  3694                           	
  3695                           l1196:	
  3696  05B8                     ;lcd.c: 122:     LCDbits.EN = 0;
  3697                           	bcf	(8),5	;volatile
  3698  05B8  1288               	line	123
  3699                           ;lcd.c: 123:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  3700                           	opt asmopt_push
  3701                           opt asmopt_off
  3702                           	movlw	13
  3703  05B9  300D               movwf	((??_dispLCD_dataReg+0)+0),f
  3704  05BA  00F0               	u827:
  3705  05BB                     decfsz	(??_dispLCD_dataReg+0)+0,f
  3706  05BB  0BF0               	goto	u827
  3707  05BC  2DBB               opt asmopt_pop
  3708                           
  3709                           	line	124
  3710                           	
  3711                           l1198:	
  3712  05BD                     ;lcd.c: 124:     LCDbits.EN = 1;
  3713                           	bcf	status, 5	;RP0=0, select bank0
  3714  05BD  1283               	bcf	status, 6	;RP1=0, select bank0
  3715  05BE  1303               	bsf	(8),5	;volatile
  3716  05BF  1688               	line	125
  3717                           	
  3718                           l92:	
  3719  05C0                     	return
  3720  05C0  0008               	opt stack 0
  3721                           GLOBAL	__end_of_dispLCD_dataReg
  3722                           	__end_of_dispLCD_dataReg:
  3723  05C1                     	signat	_dispLCD_dataReg,4217
  3724                           global	___latbits
  3725                           ___latbits	equ	2
  3726  0002                     	global	fptotal
  3727                           fptotal equ 16
  3728  0010                     	file ""
  3729                           	line	#
  3730                           psect	functab,class=ENTRY,delta=2
  3731                           global __pfunctab
  3732                           __pfunctab:
  3733  0003                     	global	fptable,__fptable
  3734                           __fptable:
  3735  0003                     fptable:
  3736  0003                     	movwf (btemp+1)&07Fh
  3737  0003  00FF               	movlw high(fptable)
  3738  0004  3000               	movwf pclath
  3739  0005  008A               	movf (btemp+1)&07Fh,w
  3740  0006  087F               	addwf pc
  3741  0007  0782               	global	fpbase
  3742                           fpbase:
  3743  0008                     	goto fpbase	; Call via a null pointer and you will get stuck here.
  3744  0008  2808               	file ""
  3745                           	line	#
  3746                           fp__dispLCD:
  3747  0009                     	ljmp	_dispLCD
  3748  0009  120A  118A  2DC1   	file ""
  3749                           	line	#
  3750                           fp__dispLCD_init:
  3751  000C                     	ljmp	_dispLCD_init
  3752  000C  120A  118A  2E68   	file ""
  3753                           	line	#
  3754                           fp__dispLCDstr:
  3755  000F                     	ljmp	_dispLCDstr
  3756  000F  120A  118A  2E2D   	file ""
  3757                           	line	#
  3758                           fp__initEUSART:
  3759  0012                     	ljmp	_initEUSART
  3760  0012  120A  118A  2D45   	file ""
  3761                           	line	#
  3762                           fp__keyboard_init:
  3763  0015                     	ljmp	_keyboard_init
  3764  0015  120A  118A  2CF7   	file ""
  3765                           	line	#
  3766                           fp__rxEUSART:
  3767  0018                     	ljmp	_rxEUSART
  3768  0018  120A  118A  2CEA   	file ""
  3769                           	line	#
  3770                           fp__rxErrorEUSART:
  3771  001B                     	ljmp	_rxErrorEUSART
  3772  001B  120A  118A  2D5C   	file ""
  3773                           	line	#
  3774                           fp__rxStatusEUSART:
  3775  001E                     	ljmp	_rxStatusEUSART
  3776  001E  120A  118A  2CEF   	global __end_of__fptable
  3777                           	__end_of__fptable:
  3778  0021                     	global __size_of__fptable
  3779                           	__size_of__fptable	equ	__end_of__fptable-__fptable
  3780  001E                     	global	btemp
  3781                           	btemp set 07Eh
  3782  007E                     
  3783                           	DABS	1,126,2	;btemp
  3784                           	global	wtemp0
  3785                           	wtemp0 set btemp+0
  3786  007E                     	end


Data Sizes:
    Strings     46
    Constant    24
    Data        35
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80      0      37
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    S29$2$2	PTR const unsigned char  size(2) Largest target is 17
		 -> vetor(BANK0[17]), STR_3(CODE[14]), STR_2(CODE[14]), 

    S29$1$0	PTR const unsigned char  size(1) Largest target is 18
		 -> STR_1(CODE[18]), 

    dispLCDstr@str	PTR const unsigned char  size(1) Largest target is 18
		 -> STR_1(CODE[18]), 

    dispLCD@str	PTR const unsigned char  size(2) Largest target is 17
		 -> vetor(BANK0[17]), STR_3(CODE[14]), STR_2(CODE[14]), 

    dispLCD_newChar@ptr	PTR const unsigned char  size(1) Largest target is 8
		 -> newChar_degree(CODE[8]), 

    S122$initEUART	PTR FTN(unsigned long ,)void  size(1) Largest target is 1
		 -> initEUSART(), 

    eusart.initEUART	PTR FTN(unsigned long ,)void  size(1) Largest target is 1
		 -> initEUSART(), 

    S122$txSTATUS	PTR FTN()unsigned char  size(1) Largest target is 1
		 -> txStatusEUSART(), 

    eusart.txSTATUS	PTR FTN()unsigned char  size(1) Largest target is 1
		 -> txStatusEUSART(), 

    S122$txEUSART	PTR FTN(unsigned char ,)void  size(1) Largest target is 1
		 -> txEUSART(), 

    eusart.txEUSART	PTR FTN(unsigned char ,)void  size(1) Largest target is 1
		 -> txEUSART(), 

    S122$rxResetERROR	PTR FTN()void  size(1) Largest target is 1
		 -> rxResetErrorEUSART(), 

    eusart.rxResetERROR	PTR FTN()void  size(1) Largest target is 1
		 -> rxResetErrorEUSART(), 

    S122$rxERROR	PTR FTN()unsigned char  size(1) Largest target is 1
		 -> rxErrorEUSART(), 

    eusart.rxERROR	PTR FTN()unsigned char  size(1) Largest target is 1
		 -> rxErrorEUSART(), 

    S122$rxSTATUS	PTR FTN()unsigned char  size(1) Largest target is 1
		 -> rxStatusEUSART(), 

    eusart.rxSTATUS	PTR FTN()unsigned char  size(1) Largest target is 1
		 -> rxStatusEUSART(), 

    S122$rxEUART	PTR FTN()unsigned char  size(1) Largest target is 1
		 -> rxEUSART(), 

    eusart.rxEUART	PTR FTN()unsigned char  size(1) Largest target is 1
		 -> rxEUSART(), 

    S94$init	PTR FTN()void  size(1) Largest target is 1
		 -> keyboard_init(), 

    keyboard.init	PTR FTN()void  size(1) Largest target is 1
		 -> keyboard_init(), 

    S94$Scan_Tec	PTR FTN()unsigned char  size(1) Largest target is 1
		 -> keyboard_scan(), 

    keyboard.Scan_Tec	PTR FTN()unsigned char  size(1) Largest target is 1
		 -> keyboard_scan(), 

    S94$Tec_Atual	PTR FTN()unsigned char  size(1) Largest target is 1
		 -> currentKey(), 

    keyboard.Tec_Atual	PTR FTN()unsigned char  size(1) Largest target is 1
		 -> currentKey(), 

    S94$Tec_Ant	PTR FTN()unsigned char  size(1) Largest target is 1
		 -> previousKey(), 

    keyboard.Tec_Ant	PTR FTN()unsigned char  size(1) Largest target is 1
		 -> previousKey(), 

    S29$B1	PTR FTN()unsigned char  size(1) Largest target is 1
		 -> dispLCD_B1(), 

    print.B1	PTR FTN()unsigned char  size(1) Largest target is 1
		 -> dispLCD_B1(), 

    S29$B0	PTR FTN()unsigned char  size(1) Largest target is 1
		 -> dispLCD_B0(), 

    print.B0	PTR FTN()unsigned char  size(1) Largest target is 1
		 -> dispLCD_B0(), 

    S29$clr	PTR FTN()void  size(1) Largest target is 1
		 -> dispLCD_clr(), 

    print.clr	PTR FTN()void  size(1) Largest target is 1
		 -> dispLCD_clr(), 

    S29$printv	PTR FTN(unsigned char ,unsigned char ,int ,unsigned char ,)void  size(1) Largest target is 1
		 -> dispLCD_num(), 

    print.printv	PTR FTN(unsigned char ,unsigned char ,int ,unsigned char ,)void  size(1) Largest target is 1
		 -> dispLCD_num(), 

    S29$printpos	PTR FTN(unsigned char ,unsigned char ,PTR const unsigned char ,)void  size(1) Largest target is 1
		 -> dispLCD(), 

    print.printpos	PTR FTN(unsigned char ,unsigned char ,PTR const unsigned char ,)void  size(1) Largest target is 1
		 -> dispLCD(), 

    S29$print	PTR FTN(PTR const unsigned char ,)void  size(1) Largest target is 1
		 -> dispLCDstr(), 

    print.print	PTR FTN(PTR const unsigned char ,)void  size(1) Largest target is 1
		 -> dispLCDstr(), 

    S29$init	PTR FTN()void  size(1) Largest target is 1
		 -> dispLCD_init(), 

    print.init	PTR FTN()void  size(1) Largest target is 1
		 -> dispLCD_init(), 


Critical Paths under _main in COMMON

    _main->_dispLCD
    _dispLCDstr->_dispLCD_lincol
    _dispLCD_init->_dispLCD_newChar
    _dispLCD_newChar->_dispLCD_instReg
    _dispLCD->_dispLCD_lincol
    _dispLCD_lincol->_dispLCD_instReg

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    3006
                                             11 COMMON     3     3      0
                            _dispLCD *
                       _dispLCD_init *
                         _dispLCDstr *
                         _initEUSART *
                      _keyboard_init *
                           _rxEUSART *
                      _rxErrorEUSART *
                     _rxStatusEUSART *
 ---------------------------------------------------------------------------------
 (1) _rxStatusEUSART                                       1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _rxErrorEUSART                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _rxEUSART                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _keyboard_init                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initEUSART                                           4     0      4      75
                                              0 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (1) _dispLCDstr                                           2     1      1     764
                                              6 COMMON     2     1      1
                    _dispLCD_dataReg
                     _dispLCD_lincol
 ---------------------------------------------------------------------------------
 (1) _dispLCD_init                                         1     1      0     911
                                              7 COMMON     1     1      0
                              _delay
                    _dispLCD_instReg
                    _dispLCD_newChar
 ---------------------------------------------------------------------------------
 (2) _dispLCD_newChar                                      4     3      1     408
                                              3 COMMON     4     3      1
                    _dispLCD_dataReg
                    _dispLCD_instReg
 ---------------------------------------------------------------------------------
 (2) _delay                                                3     1      2     327
                                              0 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 (1) _dispLCD                                              5     1      4    1210
                                              6 COMMON     5     1      4
                    _dispLCD_dataReg
                     _dispLCD_lincol
 ---------------------------------------------------------------------------------
 (2) _dispLCD_lincol                                       3     2      1     600
                                              3 COMMON     3     2      1
                    _dispLCD_instReg
 ---------------------------------------------------------------------------------
 (3) _dispLCD_instReg                                      3     3      0     176
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _dispLCD_dataReg                                      2     2      0      44
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _dispLCD *
     _dispLCD_dataReg
     _dispLCD_lincol
       _dispLCD_instReg
   _dispLCD_init *
     _delay
     _dispLCD_instReg
     _dispLCD_newChar
       _dispLCD_dataReg
       _dispLCD_instReg
   _dispLCDstr *
     _dispLCD_dataReg
     _dispLCD_lincol
       _dispLCD_instReg
   _initEUSART *
   _keyboard_init *
   _rxEUSART *
   _rxErrorEUSART *
   _rxStatusEUSART *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0      25       5       46.3%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      33      12        0.0%
ABS                  0      0      33       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Tue Sep 28 16:46:36 2021

             fp__rxEUSART 0018                         pc 0002               __CFG_CP$OFF 0000  
                      l50 07E7                        l51 07CC                        l52 0772  
                      l53 07E6                        l54 078A                        l55 07A2  
                      l80 06E4                        l64 053D                        l56 07A3  
                      l65 052F                        l57 07E8                        l49 0757  
                      l82 06DA                        l66 0544                        l58 07E9  
                      l83 06E9                        l67 0544                        l59 07E9  
                      l92 05C0                        l84 070C                        l85 072C  
                      l87 0722                        l95 051A                        l88 0731  
                      l89 0734                        l98 060E                        l99 0626  
 __end_of_dispLCD_dataReg 05C1                        fsr 0004                       l100 062C  
                     l110 05CC                       l111 05F2                       l112 05F2  
                     l106 06BB                       l202 04F6                       l115 065A  
                     l116 0635                       l109 05E1                       l117 0649  
                     l205 0566                       l118 0667                       l206 0572  
                     l119 0667                       l223 055B                       l207 0572  
                     l208 056E                       l209 0571                       l180 0507  
                     l199 04EE                       u400 06D3                       u401 06D2  
                     u410 06D9                       u411 06D8                       u420 06F5  
                     u500 060C                       u421 06F4                       u501 060B  
                     u510 0625                       u511 0624                       u440 071B  
                     u520 05F1                       u441 071A                       u521 05F0  
                     u450 0721                       u530 0641              __CFG_CPD$OFF 0000  
                     u451 0720                       u435 06F9                       u531 0640  
                     u540 0666                       u541 0665                       u470 0543  
                     u550 0562                       u471 0542                       u551 0561  
                     u560 056A                       u465 059D                       u561 0569  
                     u570 0770                       u395 06C3                       u571 076F  
                     u485 050C                       u807 072E                       u495 05F7  
                     u817 05AA                       u827 05BB                       u757 0531  
                     u767 06DE                       u777 06E6                       u787 0706  
                     u797 0726   __end_of_dispLCD_newChar 062D                       fsr0 0004  
                     indf 0000   __end_of_dispLCD_instReg 0735              __CFG_LVP$OFF 0000  
                    l1200 052E                      l1202 052F                      l1210 0605  
                    l1140 06BD                      l1204 053D                      l1220 061F  
                    l1212 0606                      l1300 056D                      l1150 06E4  
                    l1142 06C0                      l1206 0509                      l1214 060D  
                    l1222 0626                      l1230 0675                      l1310 054C  
                    l1302 056E                      l1160 0703                      l1152 06E9  
                    l1144 06CD                      l1216 060E                      l1208 05F4  
                    l1240 067A                      l1232 0676                      l1224 0668  
                    l1312 054F                      l1304 0570                      l1320 0735  
                    l1170 0715                      l1162 0704                      l1154 06EC  
                    l1146 06D3                      l1250 05CC                      l1218 061B  
                    l1242 0684                      l1234 0677                      l1226 0671  
                    l1314 0552                      l1306 0545                      l1330 0763  
                    l1322 073D                      l1180 0731                      l1172 0716  
                    l1164 0708                      l1156 06F5                      l1148 06DA  
                    l1252 05DC                      l1244 06A8                      l1236 0678  
                    l1228 0674                      l1260 0641                      l1316 0555  
                    l1308 054B                      l1340 0799                      l1332 0771  
                    l1324 0745                      l1190 05AC                      l1182 0597  
                    l1174 071B                      l1158 06F6                      l1166 070C  
                    l1254 05E1                      l1246 06B2                      l1238 0679  
                    l1262 0649                      l1318 0558                      l1270 04FD  
                    l1342 07A3                      l1334 0772                      l1350 07CC  
                    l1326 0755                      l1192 05AF                      l1184 059A  
                    l1176 0722                      l1168 070D                      l1248 05C1  
                    l1264 0655                      l1256 062D                      l1272 0501  
                    l1280 04EA                      l1344 07B2                      l1336 0781  
                    l1328 0757                      l1194 05B0                      l1186 05A7  
                    l1178 072C                      l1258 0635                      l1266 065A  
                    l1274 0502                      l1282 04EE                      l1290 0562  
                    l1450 07DB                      l1346 07BB                      l1338 078A  
                    l1196 05B8                      l1188 05A8                      l1276 0503  
                    l1268 04F7                      l1292 0564                      l1284 04EF  
                    l1348 07CB                      l1198 05BD                      l1278 0506  
                    l1294 0565                      l1286 04F6                      l1296 056A  
                    l1288 055C                      l1298 056C                      STR_1 0049  
                    STR_2 0069                      STR_3 005B                      _WPUB 0095  
            __CFG_WRT$OFF 0000                      _main 0735                      btemp 007E  
                    start 0000             __CFG_IESO$OFF 0000                     ?_main 0070  
           __CFG_WDTE$OFF 0000                     _RCREG 001A                     _PORTB 0006  
                   _TRISB 0086                     _TXREG 0019           __end_of_dispLCD 05F3  
          _txStatusEUSART 0000            __CFG_FCMEN$OFF 0000                     _delay 052E  
                   _print 0027                     _vetor 0032                     main@i 007D  
                   fpbase 0008            __CFG_BOREN$OFF 0000                     pclath 000A  
                   status 0003                     wtemp0 007E      __end_of_dispLCD_init 06BC  
          __CFG_MCLRE$OFF 0000           __initialization 07EC              __end_of_main 07EC  
        ?_dispLCD_dataReg 0070                    ??_main 007B          ?_dispLCD_newChar 0073  
      dispLCD_newChar@ptr 0073          ?_dispLCD_instReg 0070                    ?_delay 0070  
                  _ANSELH 0189          __end_of__fptable 0021            __CFG_PWRTE$OFF 0000  
        ??_rxStatusEUSART 0070    __size_of_keyboard_init 0011          fp__keyboard_init 0015  
        __end_of_rxEUSART 04EF                    _eusart 0020                    delay@t 0070  
               ??_dispLCD 007A                    fptable 0003     __end_of_rxErrorEUSART 0573  
                  fptotal 0010   __end_of__initialization 07FC   __size_of_dispLCD_lincol 0013  
          __pcstackCOMMON 0070              __pidataBANK0 0573             __end_of_delay 0545  
          _OPTION_REGbits 0081                   ??_delay 0072             _keyboard_init 04F7  
           _keyboard_scan 0000                __pbssBANK0 0043     __size_of_dispLCD_init 0054  
     dispLCD_newChar@adrs 0075                __pmaintext 0735                _dispLCD_B0 0000  
              _dispLCD_B1 0000                _dispLCDstr 062D                   _LCDbits 0008  
            _dispLCD_init 0668            _newChar_degree 0041            ?_keyboard_init 0070  
              __stringtab 0021                 ?_rxEUSART 0070                _initEUSART 0545  
              _currentKey 0000                   _dispLCD 05C1                   __ptext1 04EF  
                 __ptext2 055C                   __ptext3 04EA                   __ptext4 04F7  
                 __ptext5 0545                   __ptext6 062D                   __ptext7 0668  
                 __ptext8 05F3                   __ptext9 052E                   _currKey 0043  
  __end_of_newChar_degree 0049                   _prevKey 0044      end_of_initialization 07FC  
              ??_rxEUSART 0070            _dispLCD_lincol 0508                dispLCD@col 0077  
              dispLCD@lin 0076                dispLCD@str 0078                 _RCSTAbits 0018  
             ?_dispLCDstr 0076                fp__dispLCD 0009              _KEYBOARDbits 0006  
         ??_keyboard_init 0070                 _TRISDbits 0088  __size_of_dispLCD_dataReg 002B  
__size_of_dispLCD_newChar 003A    __end_of_dispLCD_lincol 051B  __size_of_dispLCD_instReg 0079  
             ?_initEUSART 0070                 _TXSTAbits 0098               _BAUDCTLbits 0187  
     start_initialization 07EC       __size_of_dispLCDstr 003B           ?_dispLCD_lincol 0073  
__CFG_FOSC$INTRC_NOCLKOUT 0000         dispLCD_lincol@col 0073         dispLCD_lincol@lin 0075  
  __size_of_rxErrorEUSART 0017          fp__rxErrorEUSART 001B                init_fetch0 051B  
          _keyboardMatrix 0031               __pdataBANK0 0020       __size_of_initEUSART 0017  
 __size_of_rxStatusEUSART 0008                 ___latbits 0002         fp__rxStatusEUSART 001E  
       __size_of__fptable 001E         ??_dispLCD_dataReg 0070         __size_of_rxEUSART 0005  
       ??_dispLCD_newChar 0074    __end_of_keyboardMatrix 0041         ??_dispLCD_instReg 0070  
               __pfunctab 0003               _dispLCD_clr 0000               _dispLCD_num 0000  
                ?_dispLCD 0076                 __pstrings 0021             _rxErrorEUSART 055C  
          __size_of_delay 0017                  _PIR1bits 000C              ??_dispLCDstr 0077  
        dispLCD_dataReg@d 0071                  _SPBRbits 0099             dispLCDstr@str 0076  
             __stringbase 0030        initEUSART@baudRate 0070            ?_rxErrorEUSART 0070  
      __end_of_dispLCDstr 0668              ??_initEUSART 0074          dispLCD_newChar@i 0076  
        dispLCD_instReg@i 0072           fp__dispLCD_init 000C        __end_of__stringtab 0031  
        __size_of_dispLCD 0032                  __fptable 0003            _rxStatusEUSART 04EF  
      __end_of_initEUSART 055C          ??_dispLCD_lincol 0074                  __ptext10 05C1  
                __ptext11 0508                  __ptext12 06BC                  __ptext13 0596  
   __end_of_keyboard_init 0508         __CFG_BOR4V$BOR40V 0000                  _rxEUSART 04EA  
      _rxResetErrorEUSART 0000                  _keyboard 002E             __size_of_main 00B7  
                _txEUSART 0000    __end_of_rxStatusEUSART 04F7           ??_rxErrorEUSART 0070  
           ?_dispLCD_init 0070           _dispLCD_dataReg 0596                  init_ram0 051F  
         _dispLCD_newChar 05F3           _dispLCD_instReg 06BC                 stringcode 002B  
         ?_rxStatusEUSART 0070             fp__dispLCDstr 000F            ??_dispLCD_init 0077  
                stringdir 002B                  stringtab 0021               _previousKey 0000  
           fp__initEUSART 0012  
